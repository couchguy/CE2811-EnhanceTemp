
EnhanceTemp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001692  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000015a  00800060  00001692  00001726  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000f  008001ba  008001ba  00001880  2**0
                  ALLOC
  3 .debug_aranges 000001e0  00000000  00000000  00001880  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000411  00000000  00000000  00001a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000295e  00000000  00000000  00001e71  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001440  00000000  00000000  000047cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000018f4  00000000  00000000  00005c0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000350  00000000  00000000  00007504  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000544  00000000  00000000  00007854  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a8e  00000000  00000000  00007d98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001b8  00000000  00000000  00008826  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 8f 02 	jmp	0x51e	; 0x51e <__vector_10>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 24 01 	jmp	0x248	; 0x248 <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e9       	ldi	r30, 0x92	; 146
      68:	f6 e1       	ldi	r31, 0x16	; 22
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 3b       	cpi	r26, 0xBA	; 186
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	aa eb       	ldi	r26, 0xBA	; 186
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 3c       	cpi	r26, 0xC9	; 201
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 49 00 	call	0x92	; 0x92 <main>
      8a:	0c 94 47 0b 	jmp	0x168e	; 0x168e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include <avr/interrupt.h>

FILE lcd_stream = FDEV_SETUP_STREAM(lcd_char, NULL, _FDEV_SETUP_WRITE);

int main(void)
{
      92:	8f 92       	push	r8
      94:	9f 92       	push	r9
      96:	af 92       	push	r10
      98:	bf 92       	push	r11
      9a:	cf 92       	push	r12
      9c:	df 92       	push	r13
      9e:	ef 92       	push	r14
      a0:	ff 92       	push	r15
      a2:	0f 93       	push	r16
      a4:	1f 93       	push	r17
      a6:	cf 93       	push	r28
      a8:	df 93       	push	r29

 uint8_t tempurature = 0;
 uint8_t maxtemp =0;
 uint8_t heartmon = 0;
 timer = 0;
      aa:	10 92 be 01 	sts	0x01BE, r1
 adc_done = 0;
      ae:	10 92 bf 01 	sts	0x01BF, r1
 analog = 0;
      b2:	10 92 bd 01 	sts	0x01BD, r1

 //Initalization
 adc_init();
      b6:	0e 94 0f 01 	call	0x21e	; 0x21e <adc_init>
 lcd_init();
      ba:	0e 94 65 02 	call	0x4ca	; 0x4ca <lcd_init>
 timer_init();
      be:	0e 94 87 02 	call	0x50e	; 0x50e <timer_init>




 //setup printf
 stdout = &lcd_stream;
      c2:	84 e8       	ldi	r24, 0x84	; 132
      c4:	90 e0       	ldi	r25, 0x00	; 0
      c6:	90 93 c6 01 	sts	0x01C6, r25
      ca:	80 93 c5 01 	sts	0x01C5, r24

 //sets portb data direction register
 DDRB = 0xFF;
      ce:	8f ef       	ldi	r24, 0xFF	; 255
      d0:	87 bb       	out	0x17, r24	; 23


 sei();
      d2:	78 94       	sei
      d4:	10 e0       	ldi	r17, 0x00	; 0
      d6:	00 e0       	ldi	r16, 0x00	; 0
      d8:	ff 24       	eor	r15, r15
		adc_done = 0;
		lcd_gotoxy(0,0);
		
		tempurature = ((analog*5.0)/256)*100;	

		printf("T=%2d F  MAX=%2d F",tempurature, maxtemp);
      da:	20 e6       	ldi	r18, 0x60	; 96
      dc:	82 2e       	mov	r8, r18
      de:	20 e0       	ldi	r18, 0x00	; 0
      e0:	92 2e       	mov	r9, r18
		
	}
	if(tempurature > maxtemp)
	{
		//alert for 1ms when new max temp
		PORTB = 0xFF;
      e2:	ee 24       	eor	r14, r14
      e4:	ea 94       	dec	r14
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      e6:	90 ea       	ldi	r25, 0xA0	; 160
      e8:	a9 2e       	mov	r10, r25
      ea:	9f e0       	ldi	r25, 0x0F	; 15
      ec:	b9 2e       	mov	r11, r25
		
		//sets the new max temp 4
		//degrees higher
		maxtemp = tempurature +4;
		lcd_clear();
		printf("New Max Temp!!!!");
      ee:	83 e7       	ldi	r24, 0x73	; 115
      f0:	c8 2e       	mov	r12, r24
      f2:	80 e0       	ldi	r24, 0x00	; 0
      f4:	d8 2e       	mov	r13, r24
      f6:	c0 e9       	ldi	r28, 0x90	; 144
      f8:	d1 e0       	ldi	r29, 0x01	; 1

 sei();
 while(1)
 {

	if(timer)
      fa:	80 91 be 01 	lds	r24, 0x01BE
      fe:	88 23       	and	r24, r24
     100:	b9 f0       	breq	.+46     	; 0x130 <main+0x9e>
	{
		//just telling main that
		//the timer hit a 1/4 of a
		//second and that adc has started
		timer = 0;
     102:	10 92 be 01 	sts	0x01BE, r1
		if(heartmon)
     106:	ff 20       	and	r15, r15
     108:	49 f0       	breq	.+18     	; 0x11c <main+0x8a>
		{
			lcd_gotoxy(1,15);
     10a:	81 e0       	ldi	r24, 0x01	; 1
     10c:	6f e0       	ldi	r22, 0x0F	; 15
     10e:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_gotoxy>
			lcd_custom(1); //heart
     112:	81 e0       	ldi	r24, 0x01	; 1
     114:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <lcd_custom>
     118:	ff 24       	eor	r15, r15
     11a:	0a c0       	rjmp	.+20     	; 0x130 <main+0x9e>
			heartmon = 0;
		}
		else
		{
			lcd_gotoxy(1,15);
     11c:	81 e0       	ldi	r24, 0x01	; 1
     11e:	6f e0       	ldi	r22, 0x0F	; 15
     120:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_gotoxy>
			printf(" ");
     124:	80 e2       	ldi	r24, 0x20	; 32
     126:	90 e0       	ldi	r25, 0x00	; 0
     128:	0e 94 c3 08 	call	0x1186	; 0x1186 <putchar>
     12c:	ff 24       	eor	r15, r15
     12e:	f3 94       	inc	r15
			heartmon = 1;
		}
	}
	
	if(adc_done)
     130:	80 91 bf 01 	lds	r24, 0x01BF
     134:	88 23       	and	r24, r24
     136:	09 f4       	brne	.+2      	; 0x13a <main+0xa8>
     138:	53 c0       	rjmp	.+166    	; 0x1e0 <main+0x14e>
	{
		adc_done = 0;
     13a:	10 92 bf 01 	sts	0x01BF, r1
		lcd_gotoxy(0,0);
     13e:	80 e0       	ldi	r24, 0x00	; 0
     140:	60 e0       	ldi	r22, 0x00	; 0
     142:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_gotoxy>
		
		tempurature = ((analog*5.0)/256)*100;	
     146:	60 91 bd 01 	lds	r22, 0x01BD
     14a:	70 e0       	ldi	r23, 0x00	; 0
     14c:	88 27       	eor	r24, r24
     14e:	77 fd       	sbrc	r23, 7
     150:	80 95       	com	r24
     152:	98 2f       	mov	r25, r24
     154:	0e 94 d0 05 	call	0xba0	; 0xba0 <__floatsisf>
     158:	20 e0       	ldi	r18, 0x00	; 0
     15a:	30 e0       	ldi	r19, 0x00	; 0
     15c:	40 ea       	ldi	r20, 0xA0	; 160
     15e:	50 e4       	ldi	r21, 0x40	; 64
     160:	0e 94 a6 04 	call	0x94c	; 0x94c <__mulsf3>
     164:	20 e0       	ldi	r18, 0x00	; 0
     166:	30 e0       	ldi	r19, 0x00	; 0
     168:	40 e8       	ldi	r20, 0x80	; 128
     16a:	5b e3       	ldi	r21, 0x3B	; 59
     16c:	0e 94 a6 04 	call	0x94c	; 0x94c <__mulsf3>
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	30 e0       	ldi	r19, 0x00	; 0
     174:	48 ec       	ldi	r20, 0xC8	; 200
     176:	52 e4       	ldi	r21, 0x42	; 66
     178:	0e 94 a6 04 	call	0x94c	; 0x94c <__mulsf3>
     17c:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <__fixunssfsi>
     180:	16 2f       	mov	r17, r22

		printf("T=%2d F  MAX=%2d F",tempurature, maxtemp);
     182:	00 d0       	rcall	.+0      	; 0x184 <main+0xf2>
     184:	00 d0       	rcall	.+0      	; 0x186 <main+0xf4>
     186:	00 d0       	rcall	.+0      	; 0x188 <main+0xf6>
     188:	ed b7       	in	r30, 0x3d	; 61
     18a:	fe b7       	in	r31, 0x3e	; 62
     18c:	31 96       	adiw	r30, 0x01	; 1
     18e:	ad b7       	in	r26, 0x3d	; 61
     190:	be b7       	in	r27, 0x3e	; 62
     192:	12 96       	adiw	r26, 0x02	; 2
     194:	9c 92       	st	X, r9
     196:	8e 92       	st	-X, r8
     198:	11 97       	sbiw	r26, 0x01	; 1
     19a:	62 83       	std	Z+2, r22	; 0x02
     19c:	13 82       	std	Z+3, r1	; 0x03
     19e:	04 83       	std	Z+4, r16	; 0x04
     1a0:	15 82       	std	Z+5, r1	; 0x05
     1a2:	0e 94 ae 08 	call	0x115c	; 0x115c <printf>
		lcd_gotoxy(0,4);
     1a6:	ed b7       	in	r30, 0x3d	; 61
     1a8:	fe b7       	in	r31, 0x3e	; 62
     1aa:	36 96       	adiw	r30, 0x06	; 6
     1ac:	0f b6       	in	r0, 0x3f	; 63
     1ae:	f8 94       	cli
     1b0:	fe bf       	out	0x3e, r31	; 62
     1b2:	0f be       	out	0x3f, r0	; 63
     1b4:	ed bf       	out	0x3d, r30	; 61
     1b6:	80 e0       	ldi	r24, 0x00	; 0
     1b8:	64 e0       	ldi	r22, 0x04	; 4
     1ba:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_gotoxy>
		lcd_custom(3); //degree symbol
     1be:	83 e0       	ldi	r24, 0x03	; 3
     1c0:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <lcd_custom>
		lcd_gotoxy(0,14);
     1c4:	80 e0       	ldi	r24, 0x00	; 0
     1c6:	6e e0       	ldi	r22, 0x0E	; 14
     1c8:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_gotoxy>
		lcd_custom(3); //degree symbol
     1cc:	83 e0       	ldi	r24, 0x03	; 3
     1ce:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <lcd_custom>

		lcd_gotoxy(1,14);
     1d2:	81 e0       	ldi	r24, 0x01	; 1
     1d4:	6e e0       	ldi	r22, 0x0E	; 14
     1d6:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_gotoxy>
		lcd_custom(2); //music note
     1da:	82 e0       	ldi	r24, 0x02	; 2
     1dc:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <lcd_custom>
		
	}
	if(tempurature > maxtemp)
     1e0:	01 17       	cp	r16, r17
     1e2:	08 f0       	brcs	.+2      	; 0x1e6 <main+0x154>
     1e4:	8a cf       	rjmp	.-236    	; 0xfa <main+0x68>
	{
		//alert for 1ms when new max temp
		PORTB = 0xFF;
     1e6:	e8 ba       	out	0x18, r14	; 24
     1e8:	c5 01       	movw	r24, r10
     1ea:	01 97       	sbiw	r24, 0x01	; 1
     1ec:	f1 f7       	brne	.-4      	; 0x1ea <main+0x158>
		_delay_ms(1);
		PORTB = 0x00;
     1ee:	18 ba       	out	0x18, r1	; 24
		
		//sets the new max temp 4
		//degrees higher
		maxtemp = tempurature +4;
		lcd_clear();
     1f0:	0e 94 87 01 	call	0x30e	; 0x30e <lcd_clear>
		printf("New Max Temp!!!!");
     1f4:	00 d0       	rcall	.+0      	; 0x1f6 <main+0x164>
     1f6:	ad b7       	in	r26, 0x3d	; 61
     1f8:	be b7       	in	r27, 0x3e	; 62
     1fa:	12 96       	adiw	r26, 0x02	; 2
     1fc:	dc 92       	st	X, r13
     1fe:	ce 92       	st	-X, r12
     200:	11 97       	sbiw	r26, 0x01	; 1
     202:	0e 94 ae 08 	call	0x115c	; 0x115c <printf>
     206:	80 e1       	ldi	r24, 0x10	; 16
     208:	97 e2       	ldi	r25, 0x27	; 39
     20a:	0f 90       	pop	r0
     20c:	0f 90       	pop	r0
     20e:	fe 01       	movw	r30, r28
     210:	31 97       	sbiw	r30, 0x01	; 1
     212:	f1 f7       	brne	.-4      	; 0x210 <main+0x17e>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     214:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     216:	d9 f7       	brne	.-10     	; 0x20e <main+0x17c>
		_delay_ms(1);
		PORTB = 0x00;
		
		//sets the new max temp 4
		//degrees higher
		maxtemp = tempurature +4;
     218:	01 2f       	mov	r16, r17
     21a:	0c 5f       	subi	r16, 0xFC	; 252
     21c:	6e cf       	rjmp	.-292    	; 0xfa <main+0x68>

0000021e <adc_init>:
 *	   ADC Multiplexer Selection*
 *	   Register					* 
 ********************************/
void setADMUX(uint8_t mux)
{
	ADMUX = mux;
     21e:	80 e6       	ldi	r24, 0x60	; 96
     220:	87 b9       	out	0x07, r24	; 7
 *	   ADC Control and Status 	*
 *	   Register					*
 ********************************/
void setADCSRA(uint8_t sra)
{
	ADCSRA = sra;
     222:	8f ed       	ldi	r24, 0xDF	; 223
     224:	86 b9       	out	0x06, r24	; 6
	setADMUX(0b01100000);

	//ADEN ADSC ADATE ADIF ADIE ADPS2 ADPS1 ADPS0
	setADCSRA(0b11011111);

	DDRB = 0xFF;
     226:	8f ef       	ldi	r24, 0xFF	; 255
     228:	87 bb       	out	0x17, r24	; 23
}
     22a:	08 95       	ret

0000022c <getADCH>:
/********************************
 *	returns the ADCH			*
 ********************************/
int getADCH(void)
{
	return ADCH;
     22c:	85 b1       	in	r24, 0x05	; 5
}
     22e:	90 e0       	ldi	r25, 0x00	; 0
     230:	08 95       	ret

00000232 <getADCL>:
/********************************
 *	returns the ADCL			*
 ********************************/
int getADCL(void)
{
	return ADCL;
     232:	84 b1       	in	r24, 0x04	; 4
}
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	08 95       	ret

00000238 <setADMUX>:
 *	   ADC Multiplexer Selection*
 *	   Register					* 
 ********************************/
void setADMUX(uint8_t mux)
{
	ADMUX = mux;
     238:	87 b9       	out	0x07, r24	; 7
}
     23a:	08 95       	ret

0000023c <setADCSRA>:
 *	   ADC Control and Status 	*
 *	   Register					*
 ********************************/
void setADCSRA(uint8_t sra)
{
	ADCSRA = sra;
     23c:	86 b9       	out	0x06, r24	; 6
}
     23e:	08 95       	ret

00000240 <adc_start_convert>:
 ********************************/
void adc_start_convert(void)
{
	uint8_t temp = ADCSRA;
	temp = temp | (1<<ADSC);
	ADCSRA = temp;
     240:	36 9a       	sbi	0x06, 6	; 6
	
	while (ADCSRA & (1<<ADSC));
     242:	36 99       	sbic	0x06, 6	; 6
     244:	fe cf       	rjmp	.-4      	; 0x242 <adc_start_convert+0x2>
	
}
     246:	08 95       	ret

00000248 <__vector_16>:
/********************************
 *	ISR							*
 *		for the ADC				*
 ********************************/
 ISR(ADC_vect)
 {
     248:	1f 92       	push	r1
     24a:	0f 92       	push	r0
     24c:	0f b6       	in	r0, 0x3f	; 63
     24e:	0f 92       	push	r0
     250:	11 24       	eor	r1, r1
     252:	8f 93       	push	r24
	adc_done = 1;
     254:	81 e0       	ldi	r24, 0x01	; 1
     256:	80 93 bf 01 	sts	0x01BF, r24
	analog = ADCH;
     25a:	85 b1       	in	r24, 0x05	; 5
     25c:	80 93 bd 01 	sts	0x01BD, r24
	
	//43 is the number that is equivlant to 84 
	//degrees 
	if(analog >= 43)
     260:	80 91 bd 01 	lds	r24, 0x01BD
     264:	8b 32       	cpi	r24, 0x2B	; 43
     266:	18 f0       	brcs	.+6      	; 0x26e <__vector_16+0x26>
	{
		PORTB = 0xFF;
     268:	8f ef       	ldi	r24, 0xFF	; 255
     26a:	88 bb       	out	0x18, r24	; 24
     26c:	01 c0       	rjmp	.+2      	; 0x270 <__vector_16+0x28>
	}
	else
	{
		PORTB = 0x00;
     26e:	18 ba       	out	0x18, r1	; 24
	}
 }
     270:	8f 91       	pop	r24
     272:	0f 90       	pop	r0
     274:	0f be       	out	0x3f, r0	; 63
     276:	0f 90       	pop	r0
     278:	1f 90       	pop	r1
     27a:	18 95       	reti

0000027c <lcd_char>:
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     27c:	5d 9b       	sbis	0x0b, 5	; 11
     27e:	fe cf       	rjmp	.-4      	; 0x27c <lcd_char>
     280:	ea e6       	ldi	r30, 0x6A	; 106
     282:	f8 e1       	ldi	r31, 0x18	; 24
     284:	31 97       	sbiw	r30, 0x01	; 1
     286:	f1 f7       	brne	.-4      	; 0x284 <lcd_char+0x8>
		_delay_ms(25);
		UDR = x;					// Send char
     288:	8c b9       	out	0x0c, r24	; 12
}
     28a:	08 95       	ret

0000028c <lcd_string>:
*		string
*	Returns: void
*	
*******************************************************************/
void lcd_string(char *c)
{
     28c:	fc 01       	movw	r30, r24
     28e:	4a e6       	ldi	r20, 0x6A	; 106
     290:	58 e1       	ldi	r21, 0x18	; 24
     292:	07 c0       	rjmp	.+14     	; 0x2a2 <lcd_string+0x16>
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     294:	5d 9b       	sbis	0x0b, 5	; 11
     296:	fe cf       	rjmp	.-4      	; 0x294 <lcd_string+0x8>
     298:	ca 01       	movw	r24, r20
     29a:	01 97       	sbiw	r24, 0x01	; 1
     29c:	f1 f7       	brne	.-4      	; 0x29a <lcd_string+0xe>
		_delay_ms(25);
		UDR = x;					// Send char
     29e:	2c b9       	out	0x0c, r18	; 12
     2a0:	31 96       	adiw	r30, 0x01	; 1
*	Returns: void
*	
*******************************************************************/
void lcd_string(char *c)
{
	for(int i=0; c[i] != 0; i++)
     2a2:	20 81       	ld	r18, Z
     2a4:	22 23       	and	r18, r18
     2a6:	b1 f7       	brne	.-20     	; 0x294 <lcd_string+0x8>
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     2a8:	5d 9b       	sbis	0x0b, 5	; 11
     2aa:	fe cf       	rjmp	.-4      	; 0x2a8 <lcd_string+0x1c>
     2ac:	8a e6       	ldi	r24, 0x6A	; 106
     2ae:	98 e1       	ldi	r25, 0x18	; 24
     2b0:	01 97       	sbiw	r24, 0x01	; 1
     2b2:	f1 f7       	brne	.-4      	; 0x2b0 <lcd_string+0x24>
		_delay_ms(25);
		UDR = x;					// Send char
     2b4:	8d e0       	ldi	r24, 0x0D	; 13
     2b6:	8c b9       	out	0x0c, r24	; 12
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     2b8:	5d 9b       	sbis	0x0b, 5	; 11
     2ba:	fe cf       	rjmp	.-4      	; 0x2b8 <lcd_string+0x2c>
     2bc:	8a e6       	ldi	r24, 0x6A	; 106
     2be:	98 e1       	ldi	r25, 0x18	; 24
     2c0:	01 97       	sbiw	r24, 0x01	; 1
     2c2:	f1 f7       	brne	.-4      	; 0x2c0 <lcd_string+0x34>
		_delay_ms(25);
		UDR = x;					// Send char
     2c4:	8a e0       	ldi	r24, 0x0A	; 10
     2c6:	8c b9       	out	0x0c, r24	; 12
	{
		lcd_char(c[i]);
	}
	lcd_char(CR);
	lcd_char(LF);
}
     2c8:	08 95       	ret

000002ca <lcd_gotoxy>:
*		(0,0) is the upper left, 0 <= x or y <= 15
*	Returns: void
*	
*******************************************************************/
void lcd_gotoxy(uint8_t x, uint8_t y)
{
     2ca:	98 2f       	mov	r25, r24
	uint8_t output = 128; //cursor at line 0 position 0
	//makes sure the x and y corridnates fit within the lcd screen
	if((x <= 1) && (y <= 15))
     2cc:	82 30       	cpi	r24, 0x02	; 2
     2ce:	48 f4       	brcc	.+18     	; 0x2e2 <lcd_gotoxy+0x18>
     2d0:	60 31       	cpi	r22, 0x10	; 16
     2d2:	38 f4       	brcc	.+14     	; 0x2e2 <lcd_gotoxy+0x18>
	{
		//0 line is 128 + y for each position
		//1 line is 148 + y for each position
		output += (x*20) + y;
     2d4:	60 58       	subi	r22, 0x80	; 128
     2d6:	84 e1       	ldi	r24, 0x14	; 20
     2d8:	98 9f       	mul	r25, r24
     2da:	c0 01       	movw	r24, r0
     2dc:	11 24       	eor	r1, r1
     2de:	68 0f       	add	r22, r24
     2e0:	01 c0       	rjmp	.+2      	; 0x2e4 <lcd_gotoxy+0x1a>
     2e2:	60 e8       	ldi	r22, 0x80	; 128
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     2e4:	5d 9b       	sbis	0x0b, 5	; 11
     2e6:	fe cf       	rjmp	.-4      	; 0x2e4 <lcd_gotoxy+0x1a>
     2e8:	8a e6       	ldi	r24, 0x6A	; 106
     2ea:	98 e1       	ldi	r25, 0x18	; 24
     2ec:	01 97       	sbiw	r24, 0x01	; 1
     2ee:	f1 f7       	brne	.-4      	; 0x2ec <lcd_gotoxy+0x22>
		_delay_ms(25);
		UDR = x;					// Send char
     2f0:	6c b9       	out	0x0c, r22	; 12
		//0 line is 128 + y for each position
		//1 line is 148 + y for each position
		output += (x*20) + y;
	}
	lcd_char(output);
}
     2f2:	08 95       	ret

000002f4 <lcd_ff>:
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     2f4:	5d 9b       	sbis	0x0b, 5	; 11
     2f6:	fe cf       	rjmp	.-4      	; 0x2f4 <lcd_ff>
     2f8:	2a e6       	ldi	r18, 0x6A	; 106
     2fa:	38 e1       	ldi	r19, 0x18	; 24
     2fc:	c9 01       	movw	r24, r18
     2fe:	01 97       	sbiw	r24, 0x01	; 1
     300:	f1 f7       	brne	.-4      	; 0x2fe <lcd_ff+0xa>
		_delay_ms(25);
		UDR = x;					// Send char
     302:	8c e0       	ldi	r24, 0x0C	; 12
     304:	8c b9       	out	0x0c, r24	; 12
     306:	c9 01       	movw	r24, r18
     308:	01 97       	sbiw	r24, 0x01	; 1
     30a:	f1 f7       	brne	.-4      	; 0x308 <lcd_ff+0x14>
*******************************************************************/
void lcd_ff(void)
{
	lcd_char(FF);
	_delay_ms(25);
}
     30c:	08 95       	ret

0000030e <lcd_clear>:
*	Returns: void
*	
*******************************************************************/
void lcd_clear(void)
{
	lcd_ff();
     30e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <lcd_ff>
}
     312:	08 95       	ret

00000314 <lcd_left>:
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     314:	5d 9b       	sbis	0x0b, 5	; 11
     316:	fe cf       	rjmp	.-4      	; 0x314 <lcd_left>
     318:	8a e6       	ldi	r24, 0x6A	; 106
     31a:	98 e1       	ldi	r25, 0x18	; 24
     31c:	01 97       	sbiw	r24, 0x01	; 1
     31e:	f1 f7       	brne	.-4      	; 0x31c <lcd_left+0x8>
		_delay_ms(25);
		UDR = x;					// Send char
     320:	88 e0       	ldi	r24, 0x08	; 8
     322:	8c b9       	out	0x0c, r24	; 12
*	
*******************************************************************/
void lcd_left(void)
{
	lcd_char(BS);
}
     324:	08 95       	ret

00000326 <lcd_backlight>:
*******************************************************************/
void lcd_backlight(char state)
{
	// sets the light to ON as default
	uint8_t backlight = LIGHTON;
	if ( state == '0' )
     326:	80 33       	cpi	r24, 0x30	; 48
     328:	11 f4       	brne	.+4      	; 0x32e <lcd_backlight+0x8>
     32a:	22 e1       	ldi	r18, 0x12	; 18
     32c:	01 c0       	rjmp	.+2      	; 0x330 <lcd_backlight+0xa>
     32e:	21 e1       	ldi	r18, 0x11	; 17
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     330:	5d 9b       	sbis	0x0b, 5	; 11
     332:	fe cf       	rjmp	.-4      	; 0x330 <lcd_backlight+0xa>
     334:	8a e6       	ldi	r24, 0x6A	; 106
     336:	98 e1       	ldi	r25, 0x18	; 24
     338:	01 97       	sbiw	r24, 0x01	; 1
     33a:	f1 f7       	brne	.-4      	; 0x338 <lcd_backlight+0x12>
		_delay_ms(25);
		UDR = x;					// Send char
     33c:	2c b9       	out	0x0c, r18	; 12
	{
		// sets the light to off
		backlight = LIGHTOFF;
	}
	lcd_char(backlight);
}
     33e:	08 95       	ret

00000340 <lcd_switch>:
*******************************************************************/
void lcd_switch(char state)
{
	// sets the power to OFF as default
	uint8_t power = DISPLAYOFF;
	if ( state == '1' )
     340:	81 33       	cpi	r24, 0x31	; 49
     342:	21 f4       	brne	.+8      	; 0x34c <lcd_switch+0xc>
	{
		//turns the back light on then turns on the display
		lcd_backlight(ON);
     344:	0e 94 93 01 	call	0x326	; 0x326 <lcd_backlight>
     348:	26 e1       	ldi	r18, 0x16	; 22
     34a:	04 c0       	rjmp	.+8      	; 0x354 <lcd_switch+0x14>
		power = DISPLAYON;
	}
	else
	{
		//When the Display goes off the back light will also go off.
		lcd_backlight(OFF);
     34c:	80 e3       	ldi	r24, 0x30	; 48
     34e:	0e 94 93 01 	call	0x326	; 0x326 <lcd_backlight>
     352:	25 e1       	ldi	r18, 0x15	; 21
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     354:	5d 9b       	sbis	0x0b, 5	; 11
     356:	fe cf       	rjmp	.-4      	; 0x354 <lcd_switch+0x14>
     358:	8a e6       	ldi	r24, 0x6A	; 106
     35a:	98 e1       	ldi	r25, 0x18	; 24
     35c:	01 97       	sbiw	r24, 0x01	; 1
     35e:	f1 f7       	brne	.-4      	; 0x35c <lcd_switch+0x1c>
		_delay_ms(25);
		UDR = x;					// Send char
     360:	2c b9       	out	0x0c, r18	; 12
	{
		//When the Display goes off the back light will also go off.
		lcd_backlight(OFF);
	}
	lcd_char(power);
}
     362:	08 95       	ret

00000364 <lcd_define_char>:
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     364:	5d 9b       	sbis	0x0b, 5	; 11
     366:	fe cf       	rjmp	.-4      	; 0x364 <lcd_define_char>
     368:	ea e6       	ldi	r30, 0x6A	; 106
     36a:	f8 e1       	ldi	r31, 0x18	; 24
     36c:	31 97       	sbiw	r30, 0x01	; 1
     36e:	f1 f7       	brne	.-4      	; 0x36c <lcd_define_char+0x8>
*	Returns: void
*	
*******************************************************************/
void lcd_define_char(uint8_t num, char *data)
{
	lcd_char(num+247);
     370:	89 50       	subi	r24, 0x09	; 9
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
		_delay_ms(25);
		UDR = x;					// Send char
     372:	8c b9       	out	0x0c, r24	; 12
     374:	20 e0       	ldi	r18, 0x00	; 0
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	4a e6       	ldi	r20, 0x6A	; 106
     37a:	58 e1       	ldi	r21, 0x18	; 24
void lcd_define_char(uint8_t num, char *data)
{
	lcd_char(num+247);
	for(int i=0; i < 8; i++)
	{
		lcd_char(data[i]);
     37c:	fb 01       	movw	r30, r22
     37e:	e2 0f       	add	r30, r18
     380:	f3 1f       	adc	r31, r19
     382:	e0 81       	ld	r30, Z
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     384:	5d 9b       	sbis	0x0b, 5	; 11
     386:	fe cf       	rjmp	.-4      	; 0x384 <lcd_define_char+0x20>
     388:	ca 01       	movw	r24, r20
     38a:	01 97       	sbiw	r24, 0x01	; 1
     38c:	f1 f7       	brne	.-4      	; 0x38a <lcd_define_char+0x26>
		_delay_ms(25);
		UDR = x;					// Send char
     38e:	ec b9       	out	0x0c, r30	; 12
*	
*******************************************************************/
void lcd_define_char(uint8_t num, char *data)
{
	lcd_char(num+247);
	for(int i=0; i < 8; i++)
     390:	2f 5f       	subi	r18, 0xFF	; 255
     392:	3f 4f       	sbci	r19, 0xFF	; 255
     394:	28 30       	cpi	r18, 0x08	; 8
     396:	31 05       	cpc	r19, r1
     398:	89 f7       	brne	.-30     	; 0x37c <lcd_define_char+0x18>
     39a:	84 e2       	ldi	r24, 0x24	; 36
     39c:	94 ef       	ldi	r25, 0xF4	; 244
     39e:	01 97       	sbiw	r24, 0x01	; 1
     3a0:	f1 f7       	brne	.-4      	; 0x39e <lcd_define_char+0x3a>
	{
		lcd_char(data[i]);
	}
	_delay_ms(250); //so the initalization can end
}
     3a2:	08 95       	ret

000003a4 <lcd_custom>:
*	Returns: void
*	
*******************************************************************/
void lcd_custom(uint8_t num)
{
	if(num <= 8)
     3a4:	89 30       	cpi	r24, 0x09	; 9
     3a6:	40 f4       	brcc	.+16     	; 0x3b8 <lcd_custom+0x14>
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     3a8:	5d 9b       	sbis	0x0b, 5	; 11
     3aa:	fe cf       	rjmp	.-4      	; 0x3a8 <lcd_custom+0x4>
     3ac:	ea e6       	ldi	r30, 0x6A	; 106
     3ae:	f8 e1       	ldi	r31, 0x18	; 24
     3b0:	31 97       	sbiw	r30, 0x01	; 1
     3b2:	f1 f7       	brne	.-4      	; 0x3b0 <lcd_custom+0xc>
void lcd_custom(uint8_t num)
{
	if(num <= 8)
	//num works becasue the custom chars codes are 0-7
	//and will be stored in the same style
	lcd_char(num-1);
     3b4:	81 50       	subi	r24, 0x01	; 1
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
		_delay_ms(25);
		UDR = x;					// Send char
     3b6:	8c b9       	out	0x0c, r24	; 12
     3b8:	08 95       	ret

000003ba <lcd_heartbeat_icon>:
*	Parameters: none
*	Returns: void
*
*******************************************************************/
void lcd_heartbeat_icon(void)
{
     3ba:	df 93       	push	r29
     3bc:	cf 93       	push	r28
     3be:	cd b7       	in	r28, 0x3d	; 61
     3c0:	de b7       	in	r29, 0x3e	; 62
     3c2:	28 97       	sbiw	r28, 0x08	; 8
     3c4:	0f b6       	in	r0, 0x3f	; 63
     3c6:	f8 94       	cli
     3c8:	de bf       	out	0x3e, r29	; 62
     3ca:	0f be       	out	0x3f, r0	; 63
     3cc:	cd bf       	out	0x3d, r28	; 61
	                 0b00011111,
					 0b00011111,
					 0b00001110,
					 0b00001110,
					 0b00000100,
					 0b00000000};
     3ce:	de 01       	movw	r26, r28
     3d0:	11 96       	adiw	r26, 0x01	; 1
     3d2:	ea ea       	ldi	r30, 0xAA	; 170
     3d4:	f0 e0       	ldi	r31, 0x00	; 0
     3d6:	88 e0       	ldi	r24, 0x08	; 8
     3d8:	01 90       	ld	r0, Z+
     3da:	0d 92       	st	X+, r0
     3dc:	81 50       	subi	r24, 0x01	; 1
     3de:	e1 f7       	brne	.-8      	; 0x3d8 <lcd_heartbeat_icon+0x1e>
   	char *ptr = custom;
	lcd_define_char(1, ptr);
     3e0:	81 e0       	ldi	r24, 0x01	; 1
     3e2:	be 01       	movw	r22, r28
     3e4:	6f 5f       	subi	r22, 0xFF	; 255
     3e6:	7f 4f       	sbci	r23, 0xFF	; 255
     3e8:	0e 94 b2 01 	call	0x364	; 0x364 <lcd_define_char>
}
     3ec:	28 96       	adiw	r28, 0x08	; 8
     3ee:	0f b6       	in	r0, 0x3f	; 63
     3f0:	f8 94       	cli
     3f2:	de bf       	out	0x3e, r29	; 62
     3f4:	0f be       	out	0x3f, r0	; 63
     3f6:	cd bf       	out	0x3d, r28	; 61
     3f8:	cf 91       	pop	r28
     3fa:	df 91       	pop	r29
     3fc:	08 95       	ret

000003fe <lcd_sound_icon>:
*	Parameters: none
*	Returns: void
*
*******************************************************************/
void lcd_sound_icon(void)
{
     3fe:	df 93       	push	r29
     400:	cf 93       	push	r28
     402:	cd b7       	in	r28, 0x3d	; 61
     404:	de b7       	in	r29, 0x3e	; 62
     406:	28 97       	sbiw	r28, 0x08	; 8
     408:	0f b6       	in	r0, 0x3f	; 63
     40a:	f8 94       	cli
     40c:	de bf       	out	0x3e, r29	; 62
     40e:	0f be       	out	0x3f, r0	; 63
     410:	cd bf       	out	0x3d, r28	; 61
	                 0b00001001,
					 0b00010001,
					 0b00010000,
					 0b00010000,
					 0b00010000,
					 0b00000000};
     412:	de 01       	movw	r26, r28
     414:	11 96       	adiw	r26, 0x01	; 1
     416:	e2 ea       	ldi	r30, 0xA2	; 162
     418:	f0 e0       	ldi	r31, 0x00	; 0
     41a:	88 e0       	ldi	r24, 0x08	; 8
     41c:	01 90       	ld	r0, Z+
     41e:	0d 92       	st	X+, r0
     420:	81 50       	subi	r24, 0x01	; 1
     422:	e1 f7       	brne	.-8      	; 0x41c <lcd_sound_icon+0x1e>
	char *ptr = custom;
	lcd_define_char(2, ptr);
     424:	82 e0       	ldi	r24, 0x02	; 2
     426:	be 01       	movw	r22, r28
     428:	6f 5f       	subi	r22, 0xFF	; 255
     42a:	7f 4f       	sbci	r23, 0xFF	; 255
     42c:	0e 94 b2 01 	call	0x364	; 0x364 <lcd_define_char>
}
     430:	28 96       	adiw	r28, 0x08	; 8
     432:	0f b6       	in	r0, 0x3f	; 63
     434:	f8 94       	cli
     436:	de bf       	out	0x3e, r29	; 62
     438:	0f be       	out	0x3f, r0	; 63
     43a:	cd bf       	out	0x3d, r28	; 61
     43c:	cf 91       	pop	r28
     43e:	df 91       	pop	r29
     440:	08 95       	ret

00000442 <lcd_degree_icon>:
*	Parameters: none
*	Returns: void
*
*******************************************************************/
void lcd_degree_icon(void)
{
     442:	df 93       	push	r29
     444:	cf 93       	push	r28
     446:	cd b7       	in	r28, 0x3d	; 61
     448:	de b7       	in	r29, 0x3e	; 62
     44a:	28 97       	sbiw	r28, 0x08	; 8
     44c:	0f b6       	in	r0, 0x3f	; 63
     44e:	f8 94       	cli
     450:	de bf       	out	0x3e, r29	; 62
     452:	0f be       	out	0x3f, r0	; 63
     454:	cd bf       	out	0x3d, r28	; 61
	                 0b00001001,
					 0b00001001,
					 0b00000110,
					 0b00000000,
					 0b00000000,
					 0b00000000};
     456:	de 01       	movw	r26, r28
     458:	11 96       	adiw	r26, 0x01	; 1
     45a:	ea e9       	ldi	r30, 0x9A	; 154
     45c:	f0 e0       	ldi	r31, 0x00	; 0
     45e:	88 e0       	ldi	r24, 0x08	; 8
     460:	01 90       	ld	r0, Z+
     462:	0d 92       	st	X+, r0
     464:	81 50       	subi	r24, 0x01	; 1
     466:	e1 f7       	brne	.-8      	; 0x460 <lcd_degree_icon+0x1e>
	char *ptr = custom;
	lcd_define_char(3, ptr);
     468:	83 e0       	ldi	r24, 0x03	; 3
     46a:	be 01       	movw	r22, r28
     46c:	6f 5f       	subi	r22, 0xFF	; 255
     46e:	7f 4f       	sbci	r23, 0xFF	; 255
     470:	0e 94 b2 01 	call	0x364	; 0x364 <lcd_define_char>
}
     474:	28 96       	adiw	r28, 0x08	; 8
     476:	0f b6       	in	r0, 0x3f	; 63
     478:	f8 94       	cli
     47a:	de bf       	out	0x3e, r29	; 62
     47c:	0f be       	out	0x3f, r0	; 63
     47e:	cd bf       	out	0x3d, r28	; 61
     480:	cf 91       	pop	r28
     482:	df 91       	pop	r29
     484:	08 95       	ret

00000486 <lcd_box_icon>:
*	Parameters: none
*	Returns: void
*
*******************************************************************/
void lcd_box_icon(void)
{
     486:	df 93       	push	r29
     488:	cf 93       	push	r28
     48a:	cd b7       	in	r28, 0x3d	; 61
     48c:	de b7       	in	r29, 0x3e	; 62
     48e:	28 97       	sbiw	r28, 0x08	; 8
     490:	0f b6       	in	r0, 0x3f	; 63
     492:	f8 94       	cli
     494:	de bf       	out	0x3e, r29	; 62
     496:	0f be       	out	0x3f, r0	; 63
     498:	cd bf       	out	0x3d, r28	; 61
	                 0b00011111,
					 0b00011111,
					 0b00011111,
					 0b00011111,
					 0b00011111,
					 0b00011111};
     49a:	de 01       	movw	r26, r28
     49c:	11 96       	adiw	r26, 0x01	; 1
     49e:	e2 e9       	ldi	r30, 0x92	; 146
     4a0:	f0 e0       	ldi	r31, 0x00	; 0
     4a2:	88 e0       	ldi	r24, 0x08	; 8
     4a4:	01 90       	ld	r0, Z+
     4a6:	0d 92       	st	X+, r0
     4a8:	81 50       	subi	r24, 0x01	; 1
     4aa:	e1 f7       	brne	.-8      	; 0x4a4 <lcd_box_icon+0x1e>
	char *ptr = custom;
	lcd_define_char(4, ptr);
     4ac:	84 e0       	ldi	r24, 0x04	; 4
     4ae:	be 01       	movw	r22, r28
     4b0:	6f 5f       	subi	r22, 0xFF	; 255
     4b2:	7f 4f       	sbci	r23, 0xFF	; 255
     4b4:	0e 94 b2 01 	call	0x364	; 0x364 <lcd_define_char>
}
     4b8:	28 96       	adiw	r28, 0x08	; 8
     4ba:	0f b6       	in	r0, 0x3f	; 63
     4bc:	f8 94       	cli
     4be:	de bf       	out	0x3e, r29	; 62
     4c0:	0f be       	out	0x3f, r0	; 63
     4c2:	cd bf       	out	0x3d, r28	; 61
     4c4:	cf 91       	pop	r28
     4c6:	df 91       	pop	r29
     4c8:	08 95       	ret

000004ca <lcd_init>:
*	
*******************************************************************/
void lcd_init(void)
{
	//sets up the usart
	UBRRH = 0;
     4ca:	10 bc       	out	0x20, r1	; 32
	UBRRL = UBRR_VAL; 	// 9600 baud
     4cc:	87 e6       	ldi	r24, 0x67	; 103
     4ce:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1<<TXEN);	// Enable Tx 
     4d0:	88 e0       	ldi	r24, 0x08	; 8
     4d2:	8a b9       	out	0x0a, r24	; 10
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     4d4:	5d 9b       	sbis	0x0b, 5	; 11
     4d6:	fe cf       	rjmp	.-4      	; 0x4d4 <lcd_init+0xa>
     4d8:	8a e6       	ldi	r24, 0x6A	; 106
     4da:	98 e1       	ldi	r25, 0x18	; 24
     4dc:	01 97       	sbiw	r24, 0x01	; 1
     4de:	f1 f7       	brne	.-4      	; 0x4dc <lcd_init+0x12>
		_delay_ms(25);
		UDR = x;					// Send char
     4e0:	86 e1       	ldi	r24, 0x16	; 22
     4e2:	8c b9       	out	0x0c, r24	; 12
*	Returns: void
*	
*******************************************************************/	
void lcd_char(char x)
{
		while(!(UCSRA&(1<<UDRE)));	// Wait for UDR empty
     4e4:	5d 9b       	sbis	0x0b, 5	; 11
     4e6:	fe cf       	rjmp	.-4      	; 0x4e4 <lcd_init+0x1a>
     4e8:	8a e6       	ldi	r24, 0x6A	; 106
     4ea:	98 e1       	ldi	r25, 0x18	; 24
     4ec:	01 97       	sbiw	r24, 0x01	; 1
     4ee:	f1 f7       	brne	.-4      	; 0x4ec <lcd_init+0x22>
		_delay_ms(25);
		UDR = x;					// Send char
     4f0:	81 e1       	ldi	r24, 0x11	; 17
     4f2:	8c b9       	out	0x0c, r24	; 12
     4f4:	82 e1       	ldi	r24, 0x12	; 18
     4f6:	9a e7       	ldi	r25, 0x7A	; 122
     4f8:	01 97       	sbiw	r24, 0x01	; 1
     4fa:	f1 f7       	brne	.-4      	; 0x4f8 <lcd_init+0x2e>
	lcd_char(DISPLAYON);
	lcd_char(LIGHTON);

	_delay_ms(125);
	//inits the Heart shape, Music note, box shape, and degree sybmol
	lcd_sound_icon();
     4fc:	0e 94 ff 01 	call	0x3fe	; 0x3fe <lcd_sound_icon>
	lcd_degree_icon();
     500:	0e 94 21 02 	call	0x442	; 0x442 <lcd_degree_icon>
	lcd_heartbeat_icon();
     504:	0e 94 dd 01 	call	0x3ba	; 0x3ba <lcd_heartbeat_icon>
	lcd_box_icon();
     508:	0e 94 43 02 	call	0x486	; 0x486 <lcd_box_icon>
}
     50c:	08 95       	ret

0000050e <timer_init>:
 *	quater second intervals *
 ****************************/
void timer_init(void)
{
	//FOC0 WGM00 COM01 COM00 WGM01 CS02 CS01 CS00
	TCCR0 = 0b00000101;
     50e:	85 e0       	ldi	r24, 0x05	; 5
     510:	83 bf       	out	0x33, r24	; 51
	TCNT0 = 0;  //Initial Counter Value
     512:	12 be       	out	0x32, r1	; 50
	OCR0 = 255; //Count too
     514:	8f ef       	ldi	r24, 0xFF	; 255
     516:	8c bf       	out	0x3c, r24	; 60
	TIMSK = (1<<OCIE0); //timer compare match
     518:	82 e0       	ldi	r24, 0x02	; 2
     51a:	89 bf       	out	0x39, r24	; 57
}
     51c:	08 95       	ret

0000051e <__vector_10>:

ISR(TIMER0_COMP_vect)
{
     51e:	1f 92       	push	r1
     520:	0f 92       	push	r0
     522:	0f b6       	in	r0, 0x3f	; 63
     524:	0f 92       	push	r0
     526:	11 24       	eor	r1, r1
     528:	8f 93       	push	r24
	//the lcd screen should be switched.
	static uint8_t fourSec = 0;
	static uint8_t twoSec = 0;
	//it takes 15 times for the counter to go through
	//255 to be about a quarter of a second
	if( count  == 15)
     52a:	80 91 ba 01 	lds	r24, 0x01BA
     52e:	8f 30       	cpi	r24, 0x0F	; 15
     530:	19 f5       	brne	.+70     	; 0x578 <__vector_10+0x5a>
	{
		timer = 1;
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	80 93 be 01 	sts	0x01BE, r24
		//starts the ADC conversion every
		//1/4 of second
		uint8_t temp = ADCSRA;
		temp = temp | (1<<ADSC);
		ADCSRA = temp;
     538:	36 9a       	sbi	0x06, 6	; 6
	
		while (ADCSRA & (1<<ADSC));
     53a:	36 99       	sbic	0x06, 6	; 6
     53c:	fe cf       	rjmp	.-4      	; 0x53a <__vector_10+0x1c>
		count =0;
     53e:	10 92 ba 01 	sts	0x01BA, r1
		
		//this is for the 4 second count to display the normal infromation
		if(fourSec == 16)
     542:	80 91 bc 01 	lds	r24, 0x01BC
     546:	80 31       	cpi	r24, 0x10	; 16
     548:	49 f4       	brne	.+18     	; 0x55c <__vector_10+0x3e>
		{
			twoSec++;
     54a:	80 91 bb 01 	lds	r24, 0x01BB
     54e:	8f 5f       	subi	r24, 0xFF	; 255
     550:	80 93 bb 01 	sts	0x01BB, r24
			screenSwap = 1;
     554:	81 e0       	ldi	r24, 0x01	; 1
     556:	80 93 c0 01 	sts	0x01C0, r24
     55a:	05 c0       	rjmp	.+10     	; 0x566 <__vector_10+0x48>
		}
		else
		{
			//if its not 4 seconds make sure the 2 sec counter is 0
			//and increment the 4 second counter
			twoSec = 0;
     55c:	10 92 bb 01 	sts	0x01BB, r1
			fourSec++;
     560:	8f 5f       	subi	r24, 0xFF	; 255
     562:	80 93 bc 01 	sts	0x01BC, r24
		}
		if(twoSec == 8)
     566:	80 91 bb 01 	lds	r24, 0x01BB
     56a:	88 30       	cpi	r24, 0x08	; 8
     56c:	51 f4       	brne	.+20     	; 0x582 <__vector_10+0x64>
		{
			screenSwap = 0;
     56e:	10 92 c0 01 	sts	0x01C0, r1
			fourSec = 0;
     572:	10 92 bc 01 	sts	0x01BC, r1
     576:	05 c0       	rjmp	.+10     	; 0x582 <__vector_10+0x64>
		}
		
	}
	else
	{
		count++;
     578:	80 91 ba 01 	lds	r24, 0x01BA
     57c:	8f 5f       	subi	r24, 0xFF	; 255
     57e:	80 93 ba 01 	sts	0x01BA, r24
	}
}
     582:	8f 91       	pop	r24
     584:	0f 90       	pop	r0
     586:	0f be       	out	0x3f, r0	; 63
     588:	0f 90       	pop	r0
     58a:	1f 90       	pop	r1
     58c:	18 95       	reti

0000058e <buttons_init>:
 *********************************/
 void buttons_init()
 {
  //INT1 INT0 INT2 - - - IVSEL IVCE
  //Gerneral Interrupt Control Register
 	GICR = GICR | 0b11000000;//GICR | (1<<INT1) | (1<<INT0);
     58e:	8b b7       	in	r24, 0x3b	; 59
     590:	80 6c       	ori	r24, 0xC0	; 192
     592:	8b bf       	out	0x3b, r24	; 59
	MCUCR = MCUCR | 0b00001010;//MCUCR |(0<<ISC11) | (1<<ISC10) | (0<<ISC01) | (1<<ISC00);
     594:	85 b7       	in	r24, 0x35	; 53
     596:	8a 60       	ori	r24, 0x0A	; 10
     598:	85 bf       	out	0x35, r24	; 53
	DDRD = 0x00;
     59a:	11 ba       	out	0x11, r1	; 17
	PORTD = 0x00;
     59c:	12 ba       	out	0x12, r1	; 18
 }
     59e:	08 95       	ret

000005a0 <__fixunssfsi>:
     5a0:	ef 92       	push	r14
     5a2:	ff 92       	push	r15
     5a4:	0f 93       	push	r16
     5a6:	1f 93       	push	r17
     5a8:	7b 01       	movw	r14, r22
     5aa:	8c 01       	movw	r16, r24
     5ac:	20 e0       	ldi	r18, 0x00	; 0
     5ae:	30 e0       	ldi	r19, 0x00	; 0
     5b0:	40 e0       	ldi	r20, 0x00	; 0
     5b2:	5f e4       	ldi	r21, 0x4F	; 79
     5b4:	0e 94 a0 05 	call	0xb40	; 0xb40 <__gesf2>
     5b8:	88 23       	and	r24, r24
     5ba:	8c f0       	brlt	.+34     	; 0x5de <__fixunssfsi+0x3e>
     5bc:	c8 01       	movw	r24, r16
     5be:	b7 01       	movw	r22, r14
     5c0:	20 e0       	ldi	r18, 0x00	; 0
     5c2:	30 e0       	ldi	r19, 0x00	; 0
     5c4:	40 e0       	ldi	r20, 0x00	; 0
     5c6:	5f e4       	ldi	r21, 0x4F	; 79
     5c8:	0e 94 48 04 	call	0x890	; 0x890 <__subsf3>
     5cc:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__fixsfsi>
     5d0:	9b 01       	movw	r18, r22
     5d2:	ac 01       	movw	r20, r24
     5d4:	20 50       	subi	r18, 0x00	; 0
     5d6:	30 40       	sbci	r19, 0x00	; 0
     5d8:	40 40       	sbci	r20, 0x00	; 0
     5da:	50 48       	sbci	r21, 0x80	; 128
     5dc:	06 c0       	rjmp	.+12     	; 0x5ea <__fixunssfsi+0x4a>
     5de:	c8 01       	movw	r24, r16
     5e0:	b7 01       	movw	r22, r14
     5e2:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__fixsfsi>
     5e6:	9b 01       	movw	r18, r22
     5e8:	ac 01       	movw	r20, r24
     5ea:	b9 01       	movw	r22, r18
     5ec:	ca 01       	movw	r24, r20
     5ee:	1f 91       	pop	r17
     5f0:	0f 91       	pop	r16
     5f2:	ff 90       	pop	r15
     5f4:	ef 90       	pop	r14
     5f6:	08 95       	ret

000005f8 <_fpadd_parts>:
     5f8:	a0 e0       	ldi	r26, 0x00	; 0
     5fa:	b0 e0       	ldi	r27, 0x00	; 0
     5fc:	e2 e0       	ldi	r30, 0x02	; 2
     5fe:	f3 e0       	ldi	r31, 0x03	; 3
     600:	0c 94 77 08 	jmp	0x10ee	; 0x10ee <__prologue_saves__>
     604:	dc 01       	movw	r26, r24
     606:	2b 01       	movw	r4, r22
     608:	fa 01       	movw	r30, r20
     60a:	9c 91       	ld	r25, X
     60c:	92 30       	cpi	r25, 0x02	; 2
     60e:	08 f4       	brcc	.+2      	; 0x612 <_fpadd_parts+0x1a>
     610:	39 c1       	rjmp	.+626    	; 0x884 <__stack+0x25>
     612:	eb 01       	movw	r28, r22
     614:	88 81       	ld	r24, Y
     616:	82 30       	cpi	r24, 0x02	; 2
     618:	08 f4       	brcc	.+2      	; 0x61c <_fpadd_parts+0x24>
     61a:	33 c1       	rjmp	.+614    	; 0x882 <__stack+0x23>
     61c:	94 30       	cpi	r25, 0x04	; 4
     61e:	69 f4       	brne	.+26     	; 0x63a <_fpadd_parts+0x42>
     620:	84 30       	cpi	r24, 0x04	; 4
     622:	09 f0       	breq	.+2      	; 0x626 <_fpadd_parts+0x2e>
     624:	2f c1       	rjmp	.+606    	; 0x884 <__stack+0x25>
     626:	11 96       	adiw	r26, 0x01	; 1
     628:	9c 91       	ld	r25, X
     62a:	11 97       	sbiw	r26, 0x01	; 1
     62c:	89 81       	ldd	r24, Y+1	; 0x01
     62e:	98 17       	cp	r25, r24
     630:	09 f4       	brne	.+2      	; 0x634 <_fpadd_parts+0x3c>
     632:	28 c1       	rjmp	.+592    	; 0x884 <__stack+0x25>
     634:	a2 eb       	ldi	r26, 0xB2	; 178
     636:	b0 e0       	ldi	r27, 0x00	; 0
     638:	25 c1       	rjmp	.+586    	; 0x884 <__stack+0x25>
     63a:	84 30       	cpi	r24, 0x04	; 4
     63c:	09 f4       	brne	.+2      	; 0x640 <_fpadd_parts+0x48>
     63e:	21 c1       	rjmp	.+578    	; 0x882 <__stack+0x23>
     640:	82 30       	cpi	r24, 0x02	; 2
     642:	a9 f4       	brne	.+42     	; 0x66e <_fpadd_parts+0x76>
     644:	92 30       	cpi	r25, 0x02	; 2
     646:	09 f0       	breq	.+2      	; 0x64a <_fpadd_parts+0x52>
     648:	1d c1       	rjmp	.+570    	; 0x884 <__stack+0x25>
     64a:	9a 01       	movw	r18, r20
     64c:	ad 01       	movw	r20, r26
     64e:	88 e0       	ldi	r24, 0x08	; 8
     650:	ea 01       	movw	r28, r20
     652:	09 90       	ld	r0, Y+
     654:	ae 01       	movw	r20, r28
     656:	e9 01       	movw	r28, r18
     658:	09 92       	st	Y+, r0
     65a:	9e 01       	movw	r18, r28
     65c:	81 50       	subi	r24, 0x01	; 1
     65e:	c1 f7       	brne	.-16     	; 0x650 <_fpadd_parts+0x58>
     660:	e2 01       	movw	r28, r4
     662:	89 81       	ldd	r24, Y+1	; 0x01
     664:	11 96       	adiw	r26, 0x01	; 1
     666:	9c 91       	ld	r25, X
     668:	89 23       	and	r24, r25
     66a:	81 83       	std	Z+1, r24	; 0x01
     66c:	08 c1       	rjmp	.+528    	; 0x87e <__stack+0x1f>
     66e:	92 30       	cpi	r25, 0x02	; 2
     670:	09 f4       	brne	.+2      	; 0x674 <_fpadd_parts+0x7c>
     672:	07 c1       	rjmp	.+526    	; 0x882 <__stack+0x23>
     674:	12 96       	adiw	r26, 0x02	; 2
     676:	2d 90       	ld	r2, X+
     678:	3c 90       	ld	r3, X
     67a:	13 97       	sbiw	r26, 0x03	; 3
     67c:	eb 01       	movw	r28, r22
     67e:	8a 81       	ldd	r24, Y+2	; 0x02
     680:	9b 81       	ldd	r25, Y+3	; 0x03
     682:	14 96       	adiw	r26, 0x04	; 4
     684:	ad 90       	ld	r10, X+
     686:	bd 90       	ld	r11, X+
     688:	cd 90       	ld	r12, X+
     68a:	dc 90       	ld	r13, X
     68c:	17 97       	sbiw	r26, 0x07	; 7
     68e:	ec 80       	ldd	r14, Y+4	; 0x04
     690:	fd 80       	ldd	r15, Y+5	; 0x05
     692:	0e 81       	ldd	r16, Y+6	; 0x06
     694:	1f 81       	ldd	r17, Y+7	; 0x07
     696:	91 01       	movw	r18, r2
     698:	28 1b       	sub	r18, r24
     69a:	39 0b       	sbc	r19, r25
     69c:	b9 01       	movw	r22, r18
     69e:	37 ff       	sbrs	r19, 7
     6a0:	04 c0       	rjmp	.+8      	; 0x6aa <_fpadd_parts+0xb2>
     6a2:	66 27       	eor	r22, r22
     6a4:	77 27       	eor	r23, r23
     6a6:	62 1b       	sub	r22, r18
     6a8:	73 0b       	sbc	r23, r19
     6aa:	60 32       	cpi	r22, 0x20	; 32
     6ac:	71 05       	cpc	r23, r1
     6ae:	0c f0       	brlt	.+2      	; 0x6b2 <_fpadd_parts+0xba>
     6b0:	61 c0       	rjmp	.+194    	; 0x774 <_fpadd_parts+0x17c>
     6b2:	12 16       	cp	r1, r18
     6b4:	13 06       	cpc	r1, r19
     6b6:	6c f5       	brge	.+90     	; 0x712 <_fpadd_parts+0x11a>
     6b8:	37 01       	movw	r6, r14
     6ba:	48 01       	movw	r8, r16
     6bc:	06 2e       	mov	r0, r22
     6be:	04 c0       	rjmp	.+8      	; 0x6c8 <_fpadd_parts+0xd0>
     6c0:	96 94       	lsr	r9
     6c2:	87 94       	ror	r8
     6c4:	77 94       	ror	r7
     6c6:	67 94       	ror	r6
     6c8:	0a 94       	dec	r0
     6ca:	d2 f7       	brpl	.-12     	; 0x6c0 <_fpadd_parts+0xc8>
     6cc:	21 e0       	ldi	r18, 0x01	; 1
     6ce:	30 e0       	ldi	r19, 0x00	; 0
     6d0:	40 e0       	ldi	r20, 0x00	; 0
     6d2:	50 e0       	ldi	r21, 0x00	; 0
     6d4:	04 c0       	rjmp	.+8      	; 0x6de <_fpadd_parts+0xe6>
     6d6:	22 0f       	add	r18, r18
     6d8:	33 1f       	adc	r19, r19
     6da:	44 1f       	adc	r20, r20
     6dc:	55 1f       	adc	r21, r21
     6de:	6a 95       	dec	r22
     6e0:	d2 f7       	brpl	.-12     	; 0x6d6 <_fpadd_parts+0xde>
     6e2:	21 50       	subi	r18, 0x01	; 1
     6e4:	30 40       	sbci	r19, 0x00	; 0
     6e6:	40 40       	sbci	r20, 0x00	; 0
     6e8:	50 40       	sbci	r21, 0x00	; 0
     6ea:	2e 21       	and	r18, r14
     6ec:	3f 21       	and	r19, r15
     6ee:	40 23       	and	r20, r16
     6f0:	51 23       	and	r21, r17
     6f2:	21 15       	cp	r18, r1
     6f4:	31 05       	cpc	r19, r1
     6f6:	41 05       	cpc	r20, r1
     6f8:	51 05       	cpc	r21, r1
     6fa:	21 f0       	breq	.+8      	; 0x704 <_fpadd_parts+0x10c>
     6fc:	21 e0       	ldi	r18, 0x01	; 1
     6fe:	30 e0       	ldi	r19, 0x00	; 0
     700:	40 e0       	ldi	r20, 0x00	; 0
     702:	50 e0       	ldi	r21, 0x00	; 0
     704:	79 01       	movw	r14, r18
     706:	8a 01       	movw	r16, r20
     708:	e6 28       	or	r14, r6
     70a:	f7 28       	or	r15, r7
     70c:	08 29       	or	r16, r8
     70e:	19 29       	or	r17, r9
     710:	3c c0       	rjmp	.+120    	; 0x78a <_fpadd_parts+0x192>
     712:	23 2b       	or	r18, r19
     714:	d1 f1       	breq	.+116    	; 0x78a <_fpadd_parts+0x192>
     716:	26 0e       	add	r2, r22
     718:	37 1e       	adc	r3, r23
     71a:	35 01       	movw	r6, r10
     71c:	46 01       	movw	r8, r12
     71e:	06 2e       	mov	r0, r22
     720:	04 c0       	rjmp	.+8      	; 0x72a <_fpadd_parts+0x132>
     722:	96 94       	lsr	r9
     724:	87 94       	ror	r8
     726:	77 94       	ror	r7
     728:	67 94       	ror	r6
     72a:	0a 94       	dec	r0
     72c:	d2 f7       	brpl	.-12     	; 0x722 <_fpadd_parts+0x12a>
     72e:	21 e0       	ldi	r18, 0x01	; 1
     730:	30 e0       	ldi	r19, 0x00	; 0
     732:	40 e0       	ldi	r20, 0x00	; 0
     734:	50 e0       	ldi	r21, 0x00	; 0
     736:	04 c0       	rjmp	.+8      	; 0x740 <_fpadd_parts+0x148>
     738:	22 0f       	add	r18, r18
     73a:	33 1f       	adc	r19, r19
     73c:	44 1f       	adc	r20, r20
     73e:	55 1f       	adc	r21, r21
     740:	6a 95       	dec	r22
     742:	d2 f7       	brpl	.-12     	; 0x738 <_fpadd_parts+0x140>
     744:	21 50       	subi	r18, 0x01	; 1
     746:	30 40       	sbci	r19, 0x00	; 0
     748:	40 40       	sbci	r20, 0x00	; 0
     74a:	50 40       	sbci	r21, 0x00	; 0
     74c:	2a 21       	and	r18, r10
     74e:	3b 21       	and	r19, r11
     750:	4c 21       	and	r20, r12
     752:	5d 21       	and	r21, r13
     754:	21 15       	cp	r18, r1
     756:	31 05       	cpc	r19, r1
     758:	41 05       	cpc	r20, r1
     75a:	51 05       	cpc	r21, r1
     75c:	21 f0       	breq	.+8      	; 0x766 <_fpadd_parts+0x16e>
     75e:	21 e0       	ldi	r18, 0x01	; 1
     760:	30 e0       	ldi	r19, 0x00	; 0
     762:	40 e0       	ldi	r20, 0x00	; 0
     764:	50 e0       	ldi	r21, 0x00	; 0
     766:	59 01       	movw	r10, r18
     768:	6a 01       	movw	r12, r20
     76a:	a6 28       	or	r10, r6
     76c:	b7 28       	or	r11, r7
     76e:	c8 28       	or	r12, r8
     770:	d9 28       	or	r13, r9
     772:	0b c0       	rjmp	.+22     	; 0x78a <_fpadd_parts+0x192>
     774:	82 15       	cp	r24, r2
     776:	93 05       	cpc	r25, r3
     778:	2c f0       	brlt	.+10     	; 0x784 <_fpadd_parts+0x18c>
     77a:	1c 01       	movw	r2, r24
     77c:	aa 24       	eor	r10, r10
     77e:	bb 24       	eor	r11, r11
     780:	65 01       	movw	r12, r10
     782:	03 c0       	rjmp	.+6      	; 0x78a <_fpadd_parts+0x192>
     784:	ee 24       	eor	r14, r14
     786:	ff 24       	eor	r15, r15
     788:	87 01       	movw	r16, r14
     78a:	11 96       	adiw	r26, 0x01	; 1
     78c:	9c 91       	ld	r25, X
     78e:	d2 01       	movw	r26, r4
     790:	11 96       	adiw	r26, 0x01	; 1
     792:	8c 91       	ld	r24, X
     794:	98 17       	cp	r25, r24
     796:	09 f4       	brne	.+2      	; 0x79a <_fpadd_parts+0x1a2>
     798:	45 c0       	rjmp	.+138    	; 0x824 <_fpadd_parts+0x22c>
     79a:	99 23       	and	r25, r25
     79c:	39 f0       	breq	.+14     	; 0x7ac <_fpadd_parts+0x1b4>
     79e:	a8 01       	movw	r20, r16
     7a0:	97 01       	movw	r18, r14
     7a2:	2a 19       	sub	r18, r10
     7a4:	3b 09       	sbc	r19, r11
     7a6:	4c 09       	sbc	r20, r12
     7a8:	5d 09       	sbc	r21, r13
     7aa:	06 c0       	rjmp	.+12     	; 0x7b8 <_fpadd_parts+0x1c0>
     7ac:	a6 01       	movw	r20, r12
     7ae:	95 01       	movw	r18, r10
     7b0:	2e 19       	sub	r18, r14
     7b2:	3f 09       	sbc	r19, r15
     7b4:	40 0b       	sbc	r20, r16
     7b6:	51 0b       	sbc	r21, r17
     7b8:	57 fd       	sbrc	r21, 7
     7ba:	08 c0       	rjmp	.+16     	; 0x7cc <_fpadd_parts+0x1d4>
     7bc:	11 82       	std	Z+1, r1	; 0x01
     7be:	33 82       	std	Z+3, r3	; 0x03
     7c0:	22 82       	std	Z+2, r2	; 0x02
     7c2:	24 83       	std	Z+4, r18	; 0x04
     7c4:	35 83       	std	Z+5, r19	; 0x05
     7c6:	46 83       	std	Z+6, r20	; 0x06
     7c8:	57 83       	std	Z+7, r21	; 0x07
     7ca:	1d c0       	rjmp	.+58     	; 0x806 <_fpadd_parts+0x20e>
     7cc:	81 e0       	ldi	r24, 0x01	; 1
     7ce:	81 83       	std	Z+1, r24	; 0x01
     7d0:	33 82       	std	Z+3, r3	; 0x03
     7d2:	22 82       	std	Z+2, r2	; 0x02
     7d4:	88 27       	eor	r24, r24
     7d6:	99 27       	eor	r25, r25
     7d8:	dc 01       	movw	r26, r24
     7da:	82 1b       	sub	r24, r18
     7dc:	93 0b       	sbc	r25, r19
     7de:	a4 0b       	sbc	r26, r20
     7e0:	b5 0b       	sbc	r27, r21
     7e2:	84 83       	std	Z+4, r24	; 0x04
     7e4:	95 83       	std	Z+5, r25	; 0x05
     7e6:	a6 83       	std	Z+6, r26	; 0x06
     7e8:	b7 83       	std	Z+7, r27	; 0x07
     7ea:	0d c0       	rjmp	.+26     	; 0x806 <_fpadd_parts+0x20e>
     7ec:	22 0f       	add	r18, r18
     7ee:	33 1f       	adc	r19, r19
     7f0:	44 1f       	adc	r20, r20
     7f2:	55 1f       	adc	r21, r21
     7f4:	24 83       	std	Z+4, r18	; 0x04
     7f6:	35 83       	std	Z+5, r19	; 0x05
     7f8:	46 83       	std	Z+6, r20	; 0x06
     7fa:	57 83       	std	Z+7, r21	; 0x07
     7fc:	82 81       	ldd	r24, Z+2	; 0x02
     7fe:	93 81       	ldd	r25, Z+3	; 0x03
     800:	01 97       	sbiw	r24, 0x01	; 1
     802:	93 83       	std	Z+3, r25	; 0x03
     804:	82 83       	std	Z+2, r24	; 0x02
     806:	24 81       	ldd	r18, Z+4	; 0x04
     808:	35 81       	ldd	r19, Z+5	; 0x05
     80a:	46 81       	ldd	r20, Z+6	; 0x06
     80c:	57 81       	ldd	r21, Z+7	; 0x07
     80e:	da 01       	movw	r26, r20
     810:	c9 01       	movw	r24, r18
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	a1 09       	sbc	r26, r1
     816:	b1 09       	sbc	r27, r1
     818:	8f 5f       	subi	r24, 0xFF	; 255
     81a:	9f 4f       	sbci	r25, 0xFF	; 255
     81c:	af 4f       	sbci	r26, 0xFF	; 255
     81e:	bf 43       	sbci	r27, 0x3F	; 63
     820:	28 f3       	brcs	.-54     	; 0x7ec <_fpadd_parts+0x1f4>
     822:	0b c0       	rjmp	.+22     	; 0x83a <_fpadd_parts+0x242>
     824:	91 83       	std	Z+1, r25	; 0x01
     826:	33 82       	std	Z+3, r3	; 0x03
     828:	22 82       	std	Z+2, r2	; 0x02
     82a:	ea 0c       	add	r14, r10
     82c:	fb 1c       	adc	r15, r11
     82e:	0c 1d       	adc	r16, r12
     830:	1d 1d       	adc	r17, r13
     832:	e4 82       	std	Z+4, r14	; 0x04
     834:	f5 82       	std	Z+5, r15	; 0x05
     836:	06 83       	std	Z+6, r16	; 0x06
     838:	17 83       	std	Z+7, r17	; 0x07
     83a:	83 e0       	ldi	r24, 0x03	; 3
     83c:	80 83       	st	Z, r24
     83e:	24 81       	ldd	r18, Z+4	; 0x04
     840:	35 81       	ldd	r19, Z+5	; 0x05
     842:	46 81       	ldd	r20, Z+6	; 0x06
     844:	57 81       	ldd	r21, Z+7	; 0x07
     846:	57 ff       	sbrs	r21, 7
     848:	1a c0       	rjmp	.+52     	; 0x87e <__stack+0x1f>
     84a:	c9 01       	movw	r24, r18
     84c:	aa 27       	eor	r26, r26
     84e:	97 fd       	sbrc	r25, 7
     850:	a0 95       	com	r26
     852:	ba 2f       	mov	r27, r26
     854:	81 70       	andi	r24, 0x01	; 1
     856:	90 70       	andi	r25, 0x00	; 0
     858:	a0 70       	andi	r26, 0x00	; 0
     85a:	b0 70       	andi	r27, 0x00	; 0
     85c:	56 95       	lsr	r21
     85e:	47 95       	ror	r20
     860:	37 95       	ror	r19
     862:	27 95       	ror	r18
     864:	82 2b       	or	r24, r18
     866:	93 2b       	or	r25, r19
     868:	a4 2b       	or	r26, r20
     86a:	b5 2b       	or	r27, r21
     86c:	84 83       	std	Z+4, r24	; 0x04
     86e:	95 83       	std	Z+5, r25	; 0x05
     870:	a6 83       	std	Z+6, r26	; 0x06
     872:	b7 83       	std	Z+7, r27	; 0x07
     874:	82 81       	ldd	r24, Z+2	; 0x02
     876:	93 81       	ldd	r25, Z+3	; 0x03
     878:	01 96       	adiw	r24, 0x01	; 1
     87a:	93 83       	std	Z+3, r25	; 0x03
     87c:	82 83       	std	Z+2, r24	; 0x02
     87e:	df 01       	movw	r26, r30
     880:	01 c0       	rjmp	.+2      	; 0x884 <__stack+0x25>
     882:	d2 01       	movw	r26, r4
     884:	cd 01       	movw	r24, r26
     886:	cd b7       	in	r28, 0x3d	; 61
     888:	de b7       	in	r29, 0x3e	; 62
     88a:	e2 e1       	ldi	r30, 0x12	; 18
     88c:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__epilogue_restores__>

00000890 <__subsf3>:
     890:	a0 e2       	ldi	r26, 0x20	; 32
     892:	b0 e0       	ldi	r27, 0x00	; 0
     894:	ee e4       	ldi	r30, 0x4E	; 78
     896:	f4 e0       	ldi	r31, 0x04	; 4
     898:	0c 94 83 08 	jmp	0x1106	; 0x1106 <__prologue_saves__+0x18>
     89c:	69 83       	std	Y+1, r22	; 0x01
     89e:	7a 83       	std	Y+2, r23	; 0x02
     8a0:	8b 83       	std	Y+3, r24	; 0x03
     8a2:	9c 83       	std	Y+4, r25	; 0x04
     8a4:	2d 83       	std	Y+5, r18	; 0x05
     8a6:	3e 83       	std	Y+6, r19	; 0x06
     8a8:	4f 83       	std	Y+7, r20	; 0x07
     8aa:	58 87       	std	Y+8, r21	; 0x08
     8ac:	e9 e0       	ldi	r30, 0x09	; 9
     8ae:	ee 2e       	mov	r14, r30
     8b0:	f1 2c       	mov	r15, r1
     8b2:	ec 0e       	add	r14, r28
     8b4:	fd 1e       	adc	r15, r29
     8b6:	ce 01       	movw	r24, r28
     8b8:	01 96       	adiw	r24, 0x01	; 1
     8ba:	b7 01       	movw	r22, r14
     8bc:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__unpack_f>
     8c0:	8e 01       	movw	r16, r28
     8c2:	0f 5e       	subi	r16, 0xEF	; 239
     8c4:	1f 4f       	sbci	r17, 0xFF	; 255
     8c6:	ce 01       	movw	r24, r28
     8c8:	05 96       	adiw	r24, 0x05	; 5
     8ca:	b8 01       	movw	r22, r16
     8cc:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__unpack_f>
     8d0:	8a 89       	ldd	r24, Y+18	; 0x12
     8d2:	91 e0       	ldi	r25, 0x01	; 1
     8d4:	89 27       	eor	r24, r25
     8d6:	8a 8b       	std	Y+18, r24	; 0x12
     8d8:	c7 01       	movw	r24, r14
     8da:	b8 01       	movw	r22, r16
     8dc:	ae 01       	movw	r20, r28
     8de:	47 5e       	subi	r20, 0xE7	; 231
     8e0:	5f 4f       	sbci	r21, 0xFF	; 255
     8e2:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <_fpadd_parts>
     8e6:	0e 94 d1 06 	call	0xda2	; 0xda2 <__pack_f>
     8ea:	a0 96       	adiw	r28, 0x20	; 32
     8ec:	e6 e0       	ldi	r30, 0x06	; 6
     8ee:	0c 94 9f 08 	jmp	0x113e	; 0x113e <__epilogue_restores__+0x18>

000008f2 <__addsf3>:
     8f2:	a0 e2       	ldi	r26, 0x20	; 32
     8f4:	b0 e0       	ldi	r27, 0x00	; 0
     8f6:	ef e7       	ldi	r30, 0x7F	; 127
     8f8:	f4 e0       	ldi	r31, 0x04	; 4
     8fa:	0c 94 83 08 	jmp	0x1106	; 0x1106 <__prologue_saves__+0x18>
     8fe:	69 83       	std	Y+1, r22	; 0x01
     900:	7a 83       	std	Y+2, r23	; 0x02
     902:	8b 83       	std	Y+3, r24	; 0x03
     904:	9c 83       	std	Y+4, r25	; 0x04
     906:	2d 83       	std	Y+5, r18	; 0x05
     908:	3e 83       	std	Y+6, r19	; 0x06
     90a:	4f 83       	std	Y+7, r20	; 0x07
     90c:	58 87       	std	Y+8, r21	; 0x08
     90e:	f9 e0       	ldi	r31, 0x09	; 9
     910:	ef 2e       	mov	r14, r31
     912:	f1 2c       	mov	r15, r1
     914:	ec 0e       	add	r14, r28
     916:	fd 1e       	adc	r15, r29
     918:	ce 01       	movw	r24, r28
     91a:	01 96       	adiw	r24, 0x01	; 1
     91c:	b7 01       	movw	r22, r14
     91e:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__unpack_f>
     922:	8e 01       	movw	r16, r28
     924:	0f 5e       	subi	r16, 0xEF	; 239
     926:	1f 4f       	sbci	r17, 0xFF	; 255
     928:	ce 01       	movw	r24, r28
     92a:	05 96       	adiw	r24, 0x05	; 5
     92c:	b8 01       	movw	r22, r16
     92e:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__unpack_f>
     932:	c7 01       	movw	r24, r14
     934:	b8 01       	movw	r22, r16
     936:	ae 01       	movw	r20, r28
     938:	47 5e       	subi	r20, 0xE7	; 231
     93a:	5f 4f       	sbci	r21, 0xFF	; 255
     93c:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <_fpadd_parts>
     940:	0e 94 d1 06 	call	0xda2	; 0xda2 <__pack_f>
     944:	a0 96       	adiw	r28, 0x20	; 32
     946:	e6 e0       	ldi	r30, 0x06	; 6
     948:	0c 94 9f 08 	jmp	0x113e	; 0x113e <__epilogue_restores__+0x18>

0000094c <__mulsf3>:
     94c:	a0 e2       	ldi	r26, 0x20	; 32
     94e:	b0 e0       	ldi	r27, 0x00	; 0
     950:	ec ea       	ldi	r30, 0xAC	; 172
     952:	f4 e0       	ldi	r31, 0x04	; 4
     954:	0c 94 77 08 	jmp	0x10ee	; 0x10ee <__prologue_saves__>
     958:	69 83       	std	Y+1, r22	; 0x01
     95a:	7a 83       	std	Y+2, r23	; 0x02
     95c:	8b 83       	std	Y+3, r24	; 0x03
     95e:	9c 83       	std	Y+4, r25	; 0x04
     960:	2d 83       	std	Y+5, r18	; 0x05
     962:	3e 83       	std	Y+6, r19	; 0x06
     964:	4f 83       	std	Y+7, r20	; 0x07
     966:	58 87       	std	Y+8, r21	; 0x08
     968:	ce 01       	movw	r24, r28
     96a:	01 96       	adiw	r24, 0x01	; 1
     96c:	be 01       	movw	r22, r28
     96e:	67 5f       	subi	r22, 0xF7	; 247
     970:	7f 4f       	sbci	r23, 0xFF	; 255
     972:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__unpack_f>
     976:	ce 01       	movw	r24, r28
     978:	05 96       	adiw	r24, 0x05	; 5
     97a:	be 01       	movw	r22, r28
     97c:	6f 5e       	subi	r22, 0xEF	; 239
     97e:	7f 4f       	sbci	r23, 0xFF	; 255
     980:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__unpack_f>
     984:	99 85       	ldd	r25, Y+9	; 0x09
     986:	92 30       	cpi	r25, 0x02	; 2
     988:	88 f0       	brcs	.+34     	; 0x9ac <__mulsf3+0x60>
     98a:	89 89       	ldd	r24, Y+17	; 0x11
     98c:	82 30       	cpi	r24, 0x02	; 2
     98e:	c8 f0       	brcs	.+50     	; 0x9c2 <__mulsf3+0x76>
     990:	94 30       	cpi	r25, 0x04	; 4
     992:	19 f4       	brne	.+6      	; 0x99a <__mulsf3+0x4e>
     994:	82 30       	cpi	r24, 0x02	; 2
     996:	51 f4       	brne	.+20     	; 0x9ac <__mulsf3+0x60>
     998:	04 c0       	rjmp	.+8      	; 0x9a2 <__mulsf3+0x56>
     99a:	84 30       	cpi	r24, 0x04	; 4
     99c:	29 f4       	brne	.+10     	; 0x9a8 <__mulsf3+0x5c>
     99e:	92 30       	cpi	r25, 0x02	; 2
     9a0:	81 f4       	brne	.+32     	; 0x9c2 <__mulsf3+0x76>
     9a2:	82 eb       	ldi	r24, 0xB2	; 178
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	c6 c0       	rjmp	.+396    	; 0xb34 <__mulsf3+0x1e8>
     9a8:	92 30       	cpi	r25, 0x02	; 2
     9aa:	49 f4       	brne	.+18     	; 0x9be <__mulsf3+0x72>
     9ac:	20 e0       	ldi	r18, 0x00	; 0
     9ae:	9a 85       	ldd	r25, Y+10	; 0x0a
     9b0:	8a 89       	ldd	r24, Y+18	; 0x12
     9b2:	98 13       	cpse	r25, r24
     9b4:	21 e0       	ldi	r18, 0x01	; 1
     9b6:	2a 87       	std	Y+10, r18	; 0x0a
     9b8:	ce 01       	movw	r24, r28
     9ba:	09 96       	adiw	r24, 0x09	; 9
     9bc:	bb c0       	rjmp	.+374    	; 0xb34 <__mulsf3+0x1e8>
     9be:	82 30       	cpi	r24, 0x02	; 2
     9c0:	49 f4       	brne	.+18     	; 0x9d4 <__mulsf3+0x88>
     9c2:	20 e0       	ldi	r18, 0x00	; 0
     9c4:	9a 85       	ldd	r25, Y+10	; 0x0a
     9c6:	8a 89       	ldd	r24, Y+18	; 0x12
     9c8:	98 13       	cpse	r25, r24
     9ca:	21 e0       	ldi	r18, 0x01	; 1
     9cc:	2a 8b       	std	Y+18, r18	; 0x12
     9ce:	ce 01       	movw	r24, r28
     9d0:	41 96       	adiw	r24, 0x11	; 17
     9d2:	b0 c0       	rjmp	.+352    	; 0xb34 <__mulsf3+0x1e8>
     9d4:	2d 84       	ldd	r2, Y+13	; 0x0d
     9d6:	3e 84       	ldd	r3, Y+14	; 0x0e
     9d8:	4f 84       	ldd	r4, Y+15	; 0x0f
     9da:	58 88       	ldd	r5, Y+16	; 0x10
     9dc:	6d 88       	ldd	r6, Y+21	; 0x15
     9de:	7e 88       	ldd	r7, Y+22	; 0x16
     9e0:	8f 88       	ldd	r8, Y+23	; 0x17
     9e2:	98 8c       	ldd	r9, Y+24	; 0x18
     9e4:	ee 24       	eor	r14, r14
     9e6:	ff 24       	eor	r15, r15
     9e8:	87 01       	movw	r16, r14
     9ea:	aa 24       	eor	r10, r10
     9ec:	bb 24       	eor	r11, r11
     9ee:	65 01       	movw	r12, r10
     9f0:	40 e0       	ldi	r20, 0x00	; 0
     9f2:	50 e0       	ldi	r21, 0x00	; 0
     9f4:	60 e0       	ldi	r22, 0x00	; 0
     9f6:	70 e0       	ldi	r23, 0x00	; 0
     9f8:	e0 e0       	ldi	r30, 0x00	; 0
     9fa:	f0 e0       	ldi	r31, 0x00	; 0
     9fc:	c1 01       	movw	r24, r2
     9fe:	81 70       	andi	r24, 0x01	; 1
     a00:	90 70       	andi	r25, 0x00	; 0
     a02:	89 2b       	or	r24, r25
     a04:	e9 f0       	breq	.+58     	; 0xa40 <__mulsf3+0xf4>
     a06:	e6 0c       	add	r14, r6
     a08:	f7 1c       	adc	r15, r7
     a0a:	08 1d       	adc	r16, r8
     a0c:	19 1d       	adc	r17, r9
     a0e:	9a 01       	movw	r18, r20
     a10:	ab 01       	movw	r20, r22
     a12:	2a 0d       	add	r18, r10
     a14:	3b 1d       	adc	r19, r11
     a16:	4c 1d       	adc	r20, r12
     a18:	5d 1d       	adc	r21, r13
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	a0 e0       	ldi	r26, 0x00	; 0
     a20:	b0 e0       	ldi	r27, 0x00	; 0
     a22:	e6 14       	cp	r14, r6
     a24:	f7 04       	cpc	r15, r7
     a26:	08 05       	cpc	r16, r8
     a28:	19 05       	cpc	r17, r9
     a2a:	20 f4       	brcc	.+8      	; 0xa34 <__mulsf3+0xe8>
     a2c:	81 e0       	ldi	r24, 0x01	; 1
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	a0 e0       	ldi	r26, 0x00	; 0
     a32:	b0 e0       	ldi	r27, 0x00	; 0
     a34:	ba 01       	movw	r22, r20
     a36:	a9 01       	movw	r20, r18
     a38:	48 0f       	add	r20, r24
     a3a:	59 1f       	adc	r21, r25
     a3c:	6a 1f       	adc	r22, r26
     a3e:	7b 1f       	adc	r23, r27
     a40:	aa 0c       	add	r10, r10
     a42:	bb 1c       	adc	r11, r11
     a44:	cc 1c       	adc	r12, r12
     a46:	dd 1c       	adc	r13, r13
     a48:	97 fe       	sbrs	r9, 7
     a4a:	08 c0       	rjmp	.+16     	; 0xa5c <__mulsf3+0x110>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	90 e0       	ldi	r25, 0x00	; 0
     a50:	a0 e0       	ldi	r26, 0x00	; 0
     a52:	b0 e0       	ldi	r27, 0x00	; 0
     a54:	a8 2a       	or	r10, r24
     a56:	b9 2a       	or	r11, r25
     a58:	ca 2a       	or	r12, r26
     a5a:	db 2a       	or	r13, r27
     a5c:	31 96       	adiw	r30, 0x01	; 1
     a5e:	e0 32       	cpi	r30, 0x20	; 32
     a60:	f1 05       	cpc	r31, r1
     a62:	49 f0       	breq	.+18     	; 0xa76 <__mulsf3+0x12a>
     a64:	66 0c       	add	r6, r6
     a66:	77 1c       	adc	r7, r7
     a68:	88 1c       	adc	r8, r8
     a6a:	99 1c       	adc	r9, r9
     a6c:	56 94       	lsr	r5
     a6e:	47 94       	ror	r4
     a70:	37 94       	ror	r3
     a72:	27 94       	ror	r2
     a74:	c3 cf       	rjmp	.-122    	; 0x9fc <__mulsf3+0xb0>
     a76:	fa 85       	ldd	r31, Y+10	; 0x0a
     a78:	ea 89       	ldd	r30, Y+18	; 0x12
     a7a:	2b 89       	ldd	r18, Y+19	; 0x13
     a7c:	3c 89       	ldd	r19, Y+20	; 0x14
     a7e:	8b 85       	ldd	r24, Y+11	; 0x0b
     a80:	9c 85       	ldd	r25, Y+12	; 0x0c
     a82:	28 0f       	add	r18, r24
     a84:	39 1f       	adc	r19, r25
     a86:	2e 5f       	subi	r18, 0xFE	; 254
     a88:	3f 4f       	sbci	r19, 0xFF	; 255
     a8a:	17 c0       	rjmp	.+46     	; 0xaba <__mulsf3+0x16e>
     a8c:	ca 01       	movw	r24, r20
     a8e:	81 70       	andi	r24, 0x01	; 1
     a90:	90 70       	andi	r25, 0x00	; 0
     a92:	89 2b       	or	r24, r25
     a94:	61 f0       	breq	.+24     	; 0xaae <__mulsf3+0x162>
     a96:	16 95       	lsr	r17
     a98:	07 95       	ror	r16
     a9a:	f7 94       	ror	r15
     a9c:	e7 94       	ror	r14
     a9e:	80 e0       	ldi	r24, 0x00	; 0
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	a0 e0       	ldi	r26, 0x00	; 0
     aa4:	b0 e8       	ldi	r27, 0x80	; 128
     aa6:	e8 2a       	or	r14, r24
     aa8:	f9 2a       	or	r15, r25
     aaa:	0a 2b       	or	r16, r26
     aac:	1b 2b       	or	r17, r27
     aae:	76 95       	lsr	r23
     ab0:	67 95       	ror	r22
     ab2:	57 95       	ror	r21
     ab4:	47 95       	ror	r20
     ab6:	2f 5f       	subi	r18, 0xFF	; 255
     ab8:	3f 4f       	sbci	r19, 0xFF	; 255
     aba:	77 fd       	sbrc	r23, 7
     abc:	e7 cf       	rjmp	.-50     	; 0xa8c <__mulsf3+0x140>
     abe:	0c c0       	rjmp	.+24     	; 0xad8 <__mulsf3+0x18c>
     ac0:	44 0f       	add	r20, r20
     ac2:	55 1f       	adc	r21, r21
     ac4:	66 1f       	adc	r22, r22
     ac6:	77 1f       	adc	r23, r23
     ac8:	17 fd       	sbrc	r17, 7
     aca:	41 60       	ori	r20, 0x01	; 1
     acc:	ee 0c       	add	r14, r14
     ace:	ff 1c       	adc	r15, r15
     ad0:	00 1f       	adc	r16, r16
     ad2:	11 1f       	adc	r17, r17
     ad4:	21 50       	subi	r18, 0x01	; 1
     ad6:	30 40       	sbci	r19, 0x00	; 0
     ad8:	40 30       	cpi	r20, 0x00	; 0
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	59 07       	cpc	r21, r25
     ade:	90 e0       	ldi	r25, 0x00	; 0
     ae0:	69 07       	cpc	r22, r25
     ae2:	90 e4       	ldi	r25, 0x40	; 64
     ae4:	79 07       	cpc	r23, r25
     ae6:	60 f3       	brcs	.-40     	; 0xac0 <__mulsf3+0x174>
     ae8:	2b 8f       	std	Y+27, r18	; 0x1b
     aea:	3c 8f       	std	Y+28, r19	; 0x1c
     aec:	db 01       	movw	r26, r22
     aee:	ca 01       	movw	r24, r20
     af0:	8f 77       	andi	r24, 0x7F	; 127
     af2:	90 70       	andi	r25, 0x00	; 0
     af4:	a0 70       	andi	r26, 0x00	; 0
     af6:	b0 70       	andi	r27, 0x00	; 0
     af8:	80 34       	cpi	r24, 0x40	; 64
     afa:	91 05       	cpc	r25, r1
     afc:	a1 05       	cpc	r26, r1
     afe:	b1 05       	cpc	r27, r1
     b00:	61 f4       	brne	.+24     	; 0xb1a <__mulsf3+0x1ce>
     b02:	47 fd       	sbrc	r20, 7
     b04:	0a c0       	rjmp	.+20     	; 0xb1a <__mulsf3+0x1ce>
     b06:	e1 14       	cp	r14, r1
     b08:	f1 04       	cpc	r15, r1
     b0a:	01 05       	cpc	r16, r1
     b0c:	11 05       	cpc	r17, r1
     b0e:	29 f0       	breq	.+10     	; 0xb1a <__mulsf3+0x1ce>
     b10:	40 5c       	subi	r20, 0xC0	; 192
     b12:	5f 4f       	sbci	r21, 0xFF	; 255
     b14:	6f 4f       	sbci	r22, 0xFF	; 255
     b16:	7f 4f       	sbci	r23, 0xFF	; 255
     b18:	40 78       	andi	r20, 0x80	; 128
     b1a:	1a 8e       	std	Y+26, r1	; 0x1a
     b1c:	fe 17       	cp	r31, r30
     b1e:	11 f0       	breq	.+4      	; 0xb24 <__mulsf3+0x1d8>
     b20:	81 e0       	ldi	r24, 0x01	; 1
     b22:	8a 8f       	std	Y+26, r24	; 0x1a
     b24:	4d 8f       	std	Y+29, r20	; 0x1d
     b26:	5e 8f       	std	Y+30, r21	; 0x1e
     b28:	6f 8f       	std	Y+31, r22	; 0x1f
     b2a:	78 a3       	std	Y+32, r23	; 0x20
     b2c:	83 e0       	ldi	r24, 0x03	; 3
     b2e:	89 8f       	std	Y+25, r24	; 0x19
     b30:	ce 01       	movw	r24, r28
     b32:	49 96       	adiw	r24, 0x19	; 25
     b34:	0e 94 d1 06 	call	0xda2	; 0xda2 <__pack_f>
     b38:	a0 96       	adiw	r28, 0x20	; 32
     b3a:	e2 e1       	ldi	r30, 0x12	; 18
     b3c:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__epilogue_restores__>

00000b40 <__gesf2>:
     b40:	a8 e1       	ldi	r26, 0x18	; 24
     b42:	b0 e0       	ldi	r27, 0x00	; 0
     b44:	e6 ea       	ldi	r30, 0xA6	; 166
     b46:	f5 e0       	ldi	r31, 0x05	; 5
     b48:	0c 94 83 08 	jmp	0x1106	; 0x1106 <__prologue_saves__+0x18>
     b4c:	69 83       	std	Y+1, r22	; 0x01
     b4e:	7a 83       	std	Y+2, r23	; 0x02
     b50:	8b 83       	std	Y+3, r24	; 0x03
     b52:	9c 83       	std	Y+4, r25	; 0x04
     b54:	2d 83       	std	Y+5, r18	; 0x05
     b56:	3e 83       	std	Y+6, r19	; 0x06
     b58:	4f 83       	std	Y+7, r20	; 0x07
     b5a:	58 87       	std	Y+8, r21	; 0x08
     b5c:	89 e0       	ldi	r24, 0x09	; 9
     b5e:	e8 2e       	mov	r14, r24
     b60:	f1 2c       	mov	r15, r1
     b62:	ec 0e       	add	r14, r28
     b64:	fd 1e       	adc	r15, r29
     b66:	ce 01       	movw	r24, r28
     b68:	01 96       	adiw	r24, 0x01	; 1
     b6a:	b7 01       	movw	r22, r14
     b6c:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__unpack_f>
     b70:	8e 01       	movw	r16, r28
     b72:	0f 5e       	subi	r16, 0xEF	; 239
     b74:	1f 4f       	sbci	r17, 0xFF	; 255
     b76:	ce 01       	movw	r24, r28
     b78:	05 96       	adiw	r24, 0x05	; 5
     b7a:	b8 01       	movw	r22, r16
     b7c:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__unpack_f>
     b80:	89 85       	ldd	r24, Y+9	; 0x09
     b82:	82 30       	cpi	r24, 0x02	; 2
     b84:	40 f0       	brcs	.+16     	; 0xb96 <__gesf2+0x56>
     b86:	89 89       	ldd	r24, Y+17	; 0x11
     b88:	82 30       	cpi	r24, 0x02	; 2
     b8a:	28 f0       	brcs	.+10     	; 0xb96 <__gesf2+0x56>
     b8c:	c7 01       	movw	r24, r14
     b8e:	b8 01       	movw	r22, r16
     b90:	0e 94 1e 08 	call	0x103c	; 0x103c <__fpcmp_parts_f>
     b94:	01 c0       	rjmp	.+2      	; 0xb98 <__gesf2+0x58>
     b96:	8f ef       	ldi	r24, 0xFF	; 255
     b98:	68 96       	adiw	r28, 0x18	; 24
     b9a:	e6 e0       	ldi	r30, 0x06	; 6
     b9c:	0c 94 9f 08 	jmp	0x113e	; 0x113e <__epilogue_restores__+0x18>

00000ba0 <__floatsisf>:
     ba0:	a8 e0       	ldi	r26, 0x08	; 8
     ba2:	b0 e0       	ldi	r27, 0x00	; 0
     ba4:	e6 ed       	ldi	r30, 0xD6	; 214
     ba6:	f5 e0       	ldi	r31, 0x05	; 5
     ba8:	0c 94 80 08 	jmp	0x1100	; 0x1100 <__prologue_saves__+0x12>
     bac:	9b 01       	movw	r18, r22
     bae:	ac 01       	movw	r20, r24
     bb0:	83 e0       	ldi	r24, 0x03	; 3
     bb2:	89 83       	std	Y+1, r24	; 0x01
     bb4:	da 01       	movw	r26, r20
     bb6:	c9 01       	movw	r24, r18
     bb8:	88 27       	eor	r24, r24
     bba:	b7 fd       	sbrc	r27, 7
     bbc:	83 95       	inc	r24
     bbe:	99 27       	eor	r25, r25
     bc0:	aa 27       	eor	r26, r26
     bc2:	bb 27       	eor	r27, r27
     bc4:	b8 2e       	mov	r11, r24
     bc6:	21 15       	cp	r18, r1
     bc8:	31 05       	cpc	r19, r1
     bca:	41 05       	cpc	r20, r1
     bcc:	51 05       	cpc	r21, r1
     bce:	19 f4       	brne	.+6      	; 0xbd6 <__floatsisf+0x36>
     bd0:	82 e0       	ldi	r24, 0x02	; 2
     bd2:	89 83       	std	Y+1, r24	; 0x01
     bd4:	3a c0       	rjmp	.+116    	; 0xc4a <__floatsisf+0xaa>
     bd6:	88 23       	and	r24, r24
     bd8:	a9 f0       	breq	.+42     	; 0xc04 <__floatsisf+0x64>
     bda:	20 30       	cpi	r18, 0x00	; 0
     bdc:	80 e0       	ldi	r24, 0x00	; 0
     bde:	38 07       	cpc	r19, r24
     be0:	80 e0       	ldi	r24, 0x00	; 0
     be2:	48 07       	cpc	r20, r24
     be4:	80 e8       	ldi	r24, 0x80	; 128
     be6:	58 07       	cpc	r21, r24
     be8:	29 f4       	brne	.+10     	; 0xbf4 <__floatsisf+0x54>
     bea:	60 e0       	ldi	r22, 0x00	; 0
     bec:	70 e0       	ldi	r23, 0x00	; 0
     bee:	80 e0       	ldi	r24, 0x00	; 0
     bf0:	9f ec       	ldi	r25, 0xCF	; 207
     bf2:	30 c0       	rjmp	.+96     	; 0xc54 <__floatsisf+0xb4>
     bf4:	ee 24       	eor	r14, r14
     bf6:	ff 24       	eor	r15, r15
     bf8:	87 01       	movw	r16, r14
     bfa:	e2 1a       	sub	r14, r18
     bfc:	f3 0a       	sbc	r15, r19
     bfe:	04 0b       	sbc	r16, r20
     c00:	15 0b       	sbc	r17, r21
     c02:	02 c0       	rjmp	.+4      	; 0xc08 <__floatsisf+0x68>
     c04:	79 01       	movw	r14, r18
     c06:	8a 01       	movw	r16, r20
     c08:	8e e1       	ldi	r24, 0x1E	; 30
     c0a:	c8 2e       	mov	r12, r24
     c0c:	d1 2c       	mov	r13, r1
     c0e:	dc 82       	std	Y+4, r13	; 0x04
     c10:	cb 82       	std	Y+3, r12	; 0x03
     c12:	ed 82       	std	Y+5, r14	; 0x05
     c14:	fe 82       	std	Y+6, r15	; 0x06
     c16:	0f 83       	std	Y+7, r16	; 0x07
     c18:	18 87       	std	Y+8, r17	; 0x08
     c1a:	c8 01       	movw	r24, r16
     c1c:	b7 01       	movw	r22, r14
     c1e:	0e 94 82 06 	call	0xd04	; 0xd04 <__clzsi2>
     c22:	01 97       	sbiw	r24, 0x01	; 1
     c24:	18 16       	cp	r1, r24
     c26:	19 06       	cpc	r1, r25
     c28:	84 f4       	brge	.+32     	; 0xc4a <__floatsisf+0xaa>
     c2a:	08 2e       	mov	r0, r24
     c2c:	04 c0       	rjmp	.+8      	; 0xc36 <__floatsisf+0x96>
     c2e:	ee 0c       	add	r14, r14
     c30:	ff 1c       	adc	r15, r15
     c32:	00 1f       	adc	r16, r16
     c34:	11 1f       	adc	r17, r17
     c36:	0a 94       	dec	r0
     c38:	d2 f7       	brpl	.-12     	; 0xc2e <__floatsisf+0x8e>
     c3a:	ed 82       	std	Y+5, r14	; 0x05
     c3c:	fe 82       	std	Y+6, r15	; 0x06
     c3e:	0f 83       	std	Y+7, r16	; 0x07
     c40:	18 87       	std	Y+8, r17	; 0x08
     c42:	c8 1a       	sub	r12, r24
     c44:	d9 0a       	sbc	r13, r25
     c46:	dc 82       	std	Y+4, r13	; 0x04
     c48:	cb 82       	std	Y+3, r12	; 0x03
     c4a:	ba 82       	std	Y+2, r11	; 0x02
     c4c:	ce 01       	movw	r24, r28
     c4e:	01 96       	adiw	r24, 0x01	; 1
     c50:	0e 94 d1 06 	call	0xda2	; 0xda2 <__pack_f>
     c54:	28 96       	adiw	r28, 0x08	; 8
     c56:	e9 e0       	ldi	r30, 0x09	; 9
     c58:	0c 94 9c 08 	jmp	0x1138	; 0x1138 <__epilogue_restores__+0x12>

00000c5c <__fixsfsi>:
     c5c:	ac e0       	ldi	r26, 0x0C	; 12
     c5e:	b0 e0       	ldi	r27, 0x00	; 0
     c60:	e4 e3       	ldi	r30, 0x34	; 52
     c62:	f6 e0       	ldi	r31, 0x06	; 6
     c64:	0c 94 87 08 	jmp	0x110e	; 0x110e <__prologue_saves__+0x20>
     c68:	69 83       	std	Y+1, r22	; 0x01
     c6a:	7a 83       	std	Y+2, r23	; 0x02
     c6c:	8b 83       	std	Y+3, r24	; 0x03
     c6e:	9c 83       	std	Y+4, r25	; 0x04
     c70:	ce 01       	movw	r24, r28
     c72:	01 96       	adiw	r24, 0x01	; 1
     c74:	be 01       	movw	r22, r28
     c76:	6b 5f       	subi	r22, 0xFB	; 251
     c78:	7f 4f       	sbci	r23, 0xFF	; 255
     c7a:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__unpack_f>
     c7e:	8d 81       	ldd	r24, Y+5	; 0x05
     c80:	82 30       	cpi	r24, 0x02	; 2
     c82:	61 f1       	breq	.+88     	; 0xcdc <__fixsfsi+0x80>
     c84:	82 30       	cpi	r24, 0x02	; 2
     c86:	50 f1       	brcs	.+84     	; 0xcdc <__fixsfsi+0x80>
     c88:	84 30       	cpi	r24, 0x04	; 4
     c8a:	21 f4       	brne	.+8      	; 0xc94 <__fixsfsi+0x38>
     c8c:	8e 81       	ldd	r24, Y+6	; 0x06
     c8e:	88 23       	and	r24, r24
     c90:	51 f1       	breq	.+84     	; 0xce6 <__fixsfsi+0x8a>
     c92:	2e c0       	rjmp	.+92     	; 0xcf0 <__fixsfsi+0x94>
     c94:	2f 81       	ldd	r18, Y+7	; 0x07
     c96:	38 85       	ldd	r19, Y+8	; 0x08
     c98:	37 fd       	sbrc	r19, 7
     c9a:	20 c0       	rjmp	.+64     	; 0xcdc <__fixsfsi+0x80>
     c9c:	6e 81       	ldd	r22, Y+6	; 0x06
     c9e:	2f 31       	cpi	r18, 0x1F	; 31
     ca0:	31 05       	cpc	r19, r1
     ca2:	1c f0       	brlt	.+6      	; 0xcaa <__fixsfsi+0x4e>
     ca4:	66 23       	and	r22, r22
     ca6:	f9 f0       	breq	.+62     	; 0xce6 <__fixsfsi+0x8a>
     ca8:	23 c0       	rjmp	.+70     	; 0xcf0 <__fixsfsi+0x94>
     caa:	8e e1       	ldi	r24, 0x1E	; 30
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	82 1b       	sub	r24, r18
     cb0:	93 0b       	sbc	r25, r19
     cb2:	29 85       	ldd	r18, Y+9	; 0x09
     cb4:	3a 85       	ldd	r19, Y+10	; 0x0a
     cb6:	4b 85       	ldd	r20, Y+11	; 0x0b
     cb8:	5c 85       	ldd	r21, Y+12	; 0x0c
     cba:	04 c0       	rjmp	.+8      	; 0xcc4 <__fixsfsi+0x68>
     cbc:	56 95       	lsr	r21
     cbe:	47 95       	ror	r20
     cc0:	37 95       	ror	r19
     cc2:	27 95       	ror	r18
     cc4:	8a 95       	dec	r24
     cc6:	d2 f7       	brpl	.-12     	; 0xcbc <__fixsfsi+0x60>
     cc8:	66 23       	and	r22, r22
     cca:	b1 f0       	breq	.+44     	; 0xcf8 <__fixsfsi+0x9c>
     ccc:	50 95       	com	r21
     cce:	40 95       	com	r20
     cd0:	30 95       	com	r19
     cd2:	21 95       	neg	r18
     cd4:	3f 4f       	sbci	r19, 0xFF	; 255
     cd6:	4f 4f       	sbci	r20, 0xFF	; 255
     cd8:	5f 4f       	sbci	r21, 0xFF	; 255
     cda:	0e c0       	rjmp	.+28     	; 0xcf8 <__fixsfsi+0x9c>
     cdc:	20 e0       	ldi	r18, 0x00	; 0
     cde:	30 e0       	ldi	r19, 0x00	; 0
     ce0:	40 e0       	ldi	r20, 0x00	; 0
     ce2:	50 e0       	ldi	r21, 0x00	; 0
     ce4:	09 c0       	rjmp	.+18     	; 0xcf8 <__fixsfsi+0x9c>
     ce6:	2f ef       	ldi	r18, 0xFF	; 255
     ce8:	3f ef       	ldi	r19, 0xFF	; 255
     cea:	4f ef       	ldi	r20, 0xFF	; 255
     cec:	5f e7       	ldi	r21, 0x7F	; 127
     cee:	04 c0       	rjmp	.+8      	; 0xcf8 <__fixsfsi+0x9c>
     cf0:	20 e0       	ldi	r18, 0x00	; 0
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	40 e0       	ldi	r20, 0x00	; 0
     cf6:	50 e8       	ldi	r21, 0x80	; 128
     cf8:	b9 01       	movw	r22, r18
     cfa:	ca 01       	movw	r24, r20
     cfc:	2c 96       	adiw	r28, 0x0c	; 12
     cfe:	e2 e0       	ldi	r30, 0x02	; 2
     d00:	0c 94 a3 08 	jmp	0x1146	; 0x1146 <__epilogue_restores__+0x20>

00000d04 <__clzsi2>:
     d04:	ef 92       	push	r14
     d06:	ff 92       	push	r15
     d08:	0f 93       	push	r16
     d0a:	1f 93       	push	r17
     d0c:	7b 01       	movw	r14, r22
     d0e:	8c 01       	movw	r16, r24
     d10:	80 e0       	ldi	r24, 0x00	; 0
     d12:	e8 16       	cp	r14, r24
     d14:	80 e0       	ldi	r24, 0x00	; 0
     d16:	f8 06       	cpc	r15, r24
     d18:	81 e0       	ldi	r24, 0x01	; 1
     d1a:	08 07       	cpc	r16, r24
     d1c:	80 e0       	ldi	r24, 0x00	; 0
     d1e:	18 07       	cpc	r17, r24
     d20:	88 f4       	brcc	.+34     	; 0xd44 <__clzsi2+0x40>
     d22:	8f ef       	ldi	r24, 0xFF	; 255
     d24:	e8 16       	cp	r14, r24
     d26:	f1 04       	cpc	r15, r1
     d28:	01 05       	cpc	r16, r1
     d2a:	11 05       	cpc	r17, r1
     d2c:	31 f0       	breq	.+12     	; 0xd3a <__clzsi2+0x36>
     d2e:	28 f0       	brcs	.+10     	; 0xd3a <__clzsi2+0x36>
     d30:	88 e0       	ldi	r24, 0x08	; 8
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	a0 e0       	ldi	r26, 0x00	; 0
     d36:	b0 e0       	ldi	r27, 0x00	; 0
     d38:	17 c0       	rjmp	.+46     	; 0xd68 <__clzsi2+0x64>
     d3a:	80 e0       	ldi	r24, 0x00	; 0
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	a0 e0       	ldi	r26, 0x00	; 0
     d40:	b0 e0       	ldi	r27, 0x00	; 0
     d42:	12 c0       	rjmp	.+36     	; 0xd68 <__clzsi2+0x64>
     d44:	80 e0       	ldi	r24, 0x00	; 0
     d46:	e8 16       	cp	r14, r24
     d48:	80 e0       	ldi	r24, 0x00	; 0
     d4a:	f8 06       	cpc	r15, r24
     d4c:	80 e0       	ldi	r24, 0x00	; 0
     d4e:	08 07       	cpc	r16, r24
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	18 07       	cpc	r17, r24
     d54:	28 f0       	brcs	.+10     	; 0xd60 <__clzsi2+0x5c>
     d56:	88 e1       	ldi	r24, 0x18	; 24
     d58:	90 e0       	ldi	r25, 0x00	; 0
     d5a:	a0 e0       	ldi	r26, 0x00	; 0
     d5c:	b0 e0       	ldi	r27, 0x00	; 0
     d5e:	04 c0       	rjmp	.+8      	; 0xd68 <__clzsi2+0x64>
     d60:	80 e1       	ldi	r24, 0x10	; 16
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	a0 e0       	ldi	r26, 0x00	; 0
     d66:	b0 e0       	ldi	r27, 0x00	; 0
     d68:	20 e2       	ldi	r18, 0x20	; 32
     d6a:	30 e0       	ldi	r19, 0x00	; 0
     d6c:	40 e0       	ldi	r20, 0x00	; 0
     d6e:	50 e0       	ldi	r21, 0x00	; 0
     d70:	28 1b       	sub	r18, r24
     d72:	39 0b       	sbc	r19, r25
     d74:	4a 0b       	sbc	r20, r26
     d76:	5b 0b       	sbc	r21, r27
     d78:	04 c0       	rjmp	.+8      	; 0xd82 <__clzsi2+0x7e>
     d7a:	16 95       	lsr	r17
     d7c:	07 95       	ror	r16
     d7e:	f7 94       	ror	r15
     d80:	e7 94       	ror	r14
     d82:	8a 95       	dec	r24
     d84:	d2 f7       	brpl	.-12     	; 0xd7a <__clzsi2+0x76>
     d86:	f7 01       	movw	r30, r14
     d88:	e6 54       	subi	r30, 0x46	; 70
     d8a:	ff 4f       	sbci	r31, 0xFF	; 255
     d8c:	80 81       	ld	r24, Z
     d8e:	28 1b       	sub	r18, r24
     d90:	31 09       	sbc	r19, r1
     d92:	41 09       	sbc	r20, r1
     d94:	51 09       	sbc	r21, r1
     d96:	c9 01       	movw	r24, r18
     d98:	1f 91       	pop	r17
     d9a:	0f 91       	pop	r16
     d9c:	ff 90       	pop	r15
     d9e:	ef 90       	pop	r14
     da0:	08 95       	ret

00000da2 <__pack_f>:
     da2:	df 92       	push	r13
     da4:	ef 92       	push	r14
     da6:	ff 92       	push	r15
     da8:	0f 93       	push	r16
     daa:	1f 93       	push	r17
     dac:	fc 01       	movw	r30, r24
     dae:	e4 80       	ldd	r14, Z+4	; 0x04
     db0:	f5 80       	ldd	r15, Z+5	; 0x05
     db2:	06 81       	ldd	r16, Z+6	; 0x06
     db4:	17 81       	ldd	r17, Z+7	; 0x07
     db6:	d1 80       	ldd	r13, Z+1	; 0x01
     db8:	80 81       	ld	r24, Z
     dba:	82 30       	cpi	r24, 0x02	; 2
     dbc:	48 f4       	brcc	.+18     	; 0xdd0 <__pack_f+0x2e>
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	a0 e1       	ldi	r26, 0x10	; 16
     dc4:	b0 e0       	ldi	r27, 0x00	; 0
     dc6:	e8 2a       	or	r14, r24
     dc8:	f9 2a       	or	r15, r25
     dca:	0a 2b       	or	r16, r26
     dcc:	1b 2b       	or	r17, r27
     dce:	a5 c0       	rjmp	.+330    	; 0xf1a <__pack_f+0x178>
     dd0:	84 30       	cpi	r24, 0x04	; 4
     dd2:	09 f4       	brne	.+2      	; 0xdd6 <__pack_f+0x34>
     dd4:	9f c0       	rjmp	.+318    	; 0xf14 <__pack_f+0x172>
     dd6:	82 30       	cpi	r24, 0x02	; 2
     dd8:	21 f4       	brne	.+8      	; 0xde2 <__pack_f+0x40>
     dda:	ee 24       	eor	r14, r14
     ddc:	ff 24       	eor	r15, r15
     dde:	87 01       	movw	r16, r14
     de0:	05 c0       	rjmp	.+10     	; 0xdec <__pack_f+0x4a>
     de2:	e1 14       	cp	r14, r1
     de4:	f1 04       	cpc	r15, r1
     de6:	01 05       	cpc	r16, r1
     de8:	11 05       	cpc	r17, r1
     dea:	19 f4       	brne	.+6      	; 0xdf2 <__pack_f+0x50>
     dec:	e0 e0       	ldi	r30, 0x00	; 0
     dee:	f0 e0       	ldi	r31, 0x00	; 0
     df0:	96 c0       	rjmp	.+300    	; 0xf1e <__pack_f+0x17c>
     df2:	62 81       	ldd	r22, Z+2	; 0x02
     df4:	73 81       	ldd	r23, Z+3	; 0x03
     df6:	9f ef       	ldi	r25, 0xFF	; 255
     df8:	62 38       	cpi	r22, 0x82	; 130
     dfa:	79 07       	cpc	r23, r25
     dfc:	0c f0       	brlt	.+2      	; 0xe00 <__pack_f+0x5e>
     dfe:	5b c0       	rjmp	.+182    	; 0xeb6 <__pack_f+0x114>
     e00:	22 e8       	ldi	r18, 0x82	; 130
     e02:	3f ef       	ldi	r19, 0xFF	; 255
     e04:	26 1b       	sub	r18, r22
     e06:	37 0b       	sbc	r19, r23
     e08:	2a 31       	cpi	r18, 0x1A	; 26
     e0a:	31 05       	cpc	r19, r1
     e0c:	2c f0       	brlt	.+10     	; 0xe18 <__pack_f+0x76>
     e0e:	20 e0       	ldi	r18, 0x00	; 0
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	40 e0       	ldi	r20, 0x00	; 0
     e14:	50 e0       	ldi	r21, 0x00	; 0
     e16:	2a c0       	rjmp	.+84     	; 0xe6c <__pack_f+0xca>
     e18:	b8 01       	movw	r22, r16
     e1a:	a7 01       	movw	r20, r14
     e1c:	02 2e       	mov	r0, r18
     e1e:	04 c0       	rjmp	.+8      	; 0xe28 <__pack_f+0x86>
     e20:	76 95       	lsr	r23
     e22:	67 95       	ror	r22
     e24:	57 95       	ror	r21
     e26:	47 95       	ror	r20
     e28:	0a 94       	dec	r0
     e2a:	d2 f7       	brpl	.-12     	; 0xe20 <__pack_f+0x7e>
     e2c:	81 e0       	ldi	r24, 0x01	; 1
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	a0 e0       	ldi	r26, 0x00	; 0
     e32:	b0 e0       	ldi	r27, 0x00	; 0
     e34:	04 c0       	rjmp	.+8      	; 0xe3e <__pack_f+0x9c>
     e36:	88 0f       	add	r24, r24
     e38:	99 1f       	adc	r25, r25
     e3a:	aa 1f       	adc	r26, r26
     e3c:	bb 1f       	adc	r27, r27
     e3e:	2a 95       	dec	r18
     e40:	d2 f7       	brpl	.-12     	; 0xe36 <__pack_f+0x94>
     e42:	01 97       	sbiw	r24, 0x01	; 1
     e44:	a1 09       	sbc	r26, r1
     e46:	b1 09       	sbc	r27, r1
     e48:	8e 21       	and	r24, r14
     e4a:	9f 21       	and	r25, r15
     e4c:	a0 23       	and	r26, r16
     e4e:	b1 23       	and	r27, r17
     e50:	00 97       	sbiw	r24, 0x00	; 0
     e52:	a1 05       	cpc	r26, r1
     e54:	b1 05       	cpc	r27, r1
     e56:	21 f0       	breq	.+8      	; 0xe60 <__pack_f+0xbe>
     e58:	81 e0       	ldi	r24, 0x01	; 1
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	a0 e0       	ldi	r26, 0x00	; 0
     e5e:	b0 e0       	ldi	r27, 0x00	; 0
     e60:	9a 01       	movw	r18, r20
     e62:	ab 01       	movw	r20, r22
     e64:	28 2b       	or	r18, r24
     e66:	39 2b       	or	r19, r25
     e68:	4a 2b       	or	r20, r26
     e6a:	5b 2b       	or	r21, r27
     e6c:	da 01       	movw	r26, r20
     e6e:	c9 01       	movw	r24, r18
     e70:	8f 77       	andi	r24, 0x7F	; 127
     e72:	90 70       	andi	r25, 0x00	; 0
     e74:	a0 70       	andi	r26, 0x00	; 0
     e76:	b0 70       	andi	r27, 0x00	; 0
     e78:	80 34       	cpi	r24, 0x40	; 64
     e7a:	91 05       	cpc	r25, r1
     e7c:	a1 05       	cpc	r26, r1
     e7e:	b1 05       	cpc	r27, r1
     e80:	39 f4       	brne	.+14     	; 0xe90 <__pack_f+0xee>
     e82:	27 ff       	sbrs	r18, 7
     e84:	09 c0       	rjmp	.+18     	; 0xe98 <__pack_f+0xf6>
     e86:	20 5c       	subi	r18, 0xC0	; 192
     e88:	3f 4f       	sbci	r19, 0xFF	; 255
     e8a:	4f 4f       	sbci	r20, 0xFF	; 255
     e8c:	5f 4f       	sbci	r21, 0xFF	; 255
     e8e:	04 c0       	rjmp	.+8      	; 0xe98 <__pack_f+0xf6>
     e90:	21 5c       	subi	r18, 0xC1	; 193
     e92:	3f 4f       	sbci	r19, 0xFF	; 255
     e94:	4f 4f       	sbci	r20, 0xFF	; 255
     e96:	5f 4f       	sbci	r21, 0xFF	; 255
     e98:	e0 e0       	ldi	r30, 0x00	; 0
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	20 30       	cpi	r18, 0x00	; 0
     e9e:	a0 e0       	ldi	r26, 0x00	; 0
     ea0:	3a 07       	cpc	r19, r26
     ea2:	a0 e0       	ldi	r26, 0x00	; 0
     ea4:	4a 07       	cpc	r20, r26
     ea6:	a0 e4       	ldi	r26, 0x40	; 64
     ea8:	5a 07       	cpc	r21, r26
     eaa:	10 f0       	brcs	.+4      	; 0xeb0 <__pack_f+0x10e>
     eac:	e1 e0       	ldi	r30, 0x01	; 1
     eae:	f0 e0       	ldi	r31, 0x00	; 0
     eb0:	79 01       	movw	r14, r18
     eb2:	8a 01       	movw	r16, r20
     eb4:	27 c0       	rjmp	.+78     	; 0xf04 <__pack_f+0x162>
     eb6:	60 38       	cpi	r22, 0x80	; 128
     eb8:	71 05       	cpc	r23, r1
     eba:	64 f5       	brge	.+88     	; 0xf14 <__pack_f+0x172>
     ebc:	fb 01       	movw	r30, r22
     ebe:	e1 58       	subi	r30, 0x81	; 129
     ec0:	ff 4f       	sbci	r31, 0xFF	; 255
     ec2:	d8 01       	movw	r26, r16
     ec4:	c7 01       	movw	r24, r14
     ec6:	8f 77       	andi	r24, 0x7F	; 127
     ec8:	90 70       	andi	r25, 0x00	; 0
     eca:	a0 70       	andi	r26, 0x00	; 0
     ecc:	b0 70       	andi	r27, 0x00	; 0
     ece:	80 34       	cpi	r24, 0x40	; 64
     ed0:	91 05       	cpc	r25, r1
     ed2:	a1 05       	cpc	r26, r1
     ed4:	b1 05       	cpc	r27, r1
     ed6:	39 f4       	brne	.+14     	; 0xee6 <__pack_f+0x144>
     ed8:	e7 fe       	sbrs	r14, 7
     eda:	0d c0       	rjmp	.+26     	; 0xef6 <__pack_f+0x154>
     edc:	80 e4       	ldi	r24, 0x40	; 64
     ede:	90 e0       	ldi	r25, 0x00	; 0
     ee0:	a0 e0       	ldi	r26, 0x00	; 0
     ee2:	b0 e0       	ldi	r27, 0x00	; 0
     ee4:	04 c0       	rjmp	.+8      	; 0xeee <__pack_f+0x14c>
     ee6:	8f e3       	ldi	r24, 0x3F	; 63
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	a0 e0       	ldi	r26, 0x00	; 0
     eec:	b0 e0       	ldi	r27, 0x00	; 0
     eee:	e8 0e       	add	r14, r24
     ef0:	f9 1e       	adc	r15, r25
     ef2:	0a 1f       	adc	r16, r26
     ef4:	1b 1f       	adc	r17, r27
     ef6:	17 ff       	sbrs	r17, 7
     ef8:	05 c0       	rjmp	.+10     	; 0xf04 <__pack_f+0x162>
     efa:	16 95       	lsr	r17
     efc:	07 95       	ror	r16
     efe:	f7 94       	ror	r15
     f00:	e7 94       	ror	r14
     f02:	31 96       	adiw	r30, 0x01	; 1
     f04:	87 e0       	ldi	r24, 0x07	; 7
     f06:	16 95       	lsr	r17
     f08:	07 95       	ror	r16
     f0a:	f7 94       	ror	r15
     f0c:	e7 94       	ror	r14
     f0e:	8a 95       	dec	r24
     f10:	d1 f7       	brne	.-12     	; 0xf06 <__pack_f+0x164>
     f12:	05 c0       	rjmp	.+10     	; 0xf1e <__pack_f+0x17c>
     f14:	ee 24       	eor	r14, r14
     f16:	ff 24       	eor	r15, r15
     f18:	87 01       	movw	r16, r14
     f1a:	ef ef       	ldi	r30, 0xFF	; 255
     f1c:	f0 e0       	ldi	r31, 0x00	; 0
     f1e:	6e 2f       	mov	r22, r30
     f20:	67 95       	ror	r22
     f22:	66 27       	eor	r22, r22
     f24:	67 95       	ror	r22
     f26:	90 2f       	mov	r25, r16
     f28:	9f 77       	andi	r25, 0x7F	; 127
     f2a:	d7 94       	ror	r13
     f2c:	dd 24       	eor	r13, r13
     f2e:	d7 94       	ror	r13
     f30:	8e 2f       	mov	r24, r30
     f32:	86 95       	lsr	r24
     f34:	49 2f       	mov	r20, r25
     f36:	46 2b       	or	r20, r22
     f38:	58 2f       	mov	r21, r24
     f3a:	5d 29       	or	r21, r13
     f3c:	b7 01       	movw	r22, r14
     f3e:	ca 01       	movw	r24, r20
     f40:	1f 91       	pop	r17
     f42:	0f 91       	pop	r16
     f44:	ff 90       	pop	r15
     f46:	ef 90       	pop	r14
     f48:	df 90       	pop	r13
     f4a:	08 95       	ret

00000f4c <__unpack_f>:
     f4c:	fc 01       	movw	r30, r24
     f4e:	db 01       	movw	r26, r22
     f50:	40 81       	ld	r20, Z
     f52:	51 81       	ldd	r21, Z+1	; 0x01
     f54:	22 81       	ldd	r18, Z+2	; 0x02
     f56:	62 2f       	mov	r22, r18
     f58:	6f 77       	andi	r22, 0x7F	; 127
     f5a:	70 e0       	ldi	r23, 0x00	; 0
     f5c:	22 1f       	adc	r18, r18
     f5e:	22 27       	eor	r18, r18
     f60:	22 1f       	adc	r18, r18
     f62:	93 81       	ldd	r25, Z+3	; 0x03
     f64:	89 2f       	mov	r24, r25
     f66:	88 0f       	add	r24, r24
     f68:	82 2b       	or	r24, r18
     f6a:	28 2f       	mov	r18, r24
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	99 1f       	adc	r25, r25
     f70:	99 27       	eor	r25, r25
     f72:	99 1f       	adc	r25, r25
     f74:	11 96       	adiw	r26, 0x01	; 1
     f76:	9c 93       	st	X, r25
     f78:	11 97       	sbiw	r26, 0x01	; 1
     f7a:	21 15       	cp	r18, r1
     f7c:	31 05       	cpc	r19, r1
     f7e:	a9 f5       	brne	.+106    	; 0xfea <__unpack_f+0x9e>
     f80:	41 15       	cp	r20, r1
     f82:	51 05       	cpc	r21, r1
     f84:	61 05       	cpc	r22, r1
     f86:	71 05       	cpc	r23, r1
     f88:	11 f4       	brne	.+4      	; 0xf8e <__unpack_f+0x42>
     f8a:	82 e0       	ldi	r24, 0x02	; 2
     f8c:	37 c0       	rjmp	.+110    	; 0xffc <__unpack_f+0xb0>
     f8e:	82 e8       	ldi	r24, 0x82	; 130
     f90:	9f ef       	ldi	r25, 0xFF	; 255
     f92:	13 96       	adiw	r26, 0x03	; 3
     f94:	9c 93       	st	X, r25
     f96:	8e 93       	st	-X, r24
     f98:	12 97       	sbiw	r26, 0x02	; 2
     f9a:	9a 01       	movw	r18, r20
     f9c:	ab 01       	movw	r20, r22
     f9e:	67 e0       	ldi	r22, 0x07	; 7
     fa0:	22 0f       	add	r18, r18
     fa2:	33 1f       	adc	r19, r19
     fa4:	44 1f       	adc	r20, r20
     fa6:	55 1f       	adc	r21, r21
     fa8:	6a 95       	dec	r22
     faa:	d1 f7       	brne	.-12     	; 0xfa0 <__unpack_f+0x54>
     fac:	83 e0       	ldi	r24, 0x03	; 3
     fae:	8c 93       	st	X, r24
     fb0:	0d c0       	rjmp	.+26     	; 0xfcc <__unpack_f+0x80>
     fb2:	22 0f       	add	r18, r18
     fb4:	33 1f       	adc	r19, r19
     fb6:	44 1f       	adc	r20, r20
     fb8:	55 1f       	adc	r21, r21
     fba:	12 96       	adiw	r26, 0x02	; 2
     fbc:	8d 91       	ld	r24, X+
     fbe:	9c 91       	ld	r25, X
     fc0:	13 97       	sbiw	r26, 0x03	; 3
     fc2:	01 97       	sbiw	r24, 0x01	; 1
     fc4:	13 96       	adiw	r26, 0x03	; 3
     fc6:	9c 93       	st	X, r25
     fc8:	8e 93       	st	-X, r24
     fca:	12 97       	sbiw	r26, 0x02	; 2
     fcc:	20 30       	cpi	r18, 0x00	; 0
     fce:	80 e0       	ldi	r24, 0x00	; 0
     fd0:	38 07       	cpc	r19, r24
     fd2:	80 e0       	ldi	r24, 0x00	; 0
     fd4:	48 07       	cpc	r20, r24
     fd6:	80 e4       	ldi	r24, 0x40	; 64
     fd8:	58 07       	cpc	r21, r24
     fda:	58 f3       	brcs	.-42     	; 0xfb2 <__unpack_f+0x66>
     fdc:	14 96       	adiw	r26, 0x04	; 4
     fde:	2d 93       	st	X+, r18
     fe0:	3d 93       	st	X+, r19
     fe2:	4d 93       	st	X+, r20
     fe4:	5c 93       	st	X, r21
     fe6:	17 97       	sbiw	r26, 0x07	; 7
     fe8:	08 95       	ret
     fea:	2f 3f       	cpi	r18, 0xFF	; 255
     fec:	31 05       	cpc	r19, r1
     fee:	79 f4       	brne	.+30     	; 0x100e <__unpack_f+0xc2>
     ff0:	41 15       	cp	r20, r1
     ff2:	51 05       	cpc	r21, r1
     ff4:	61 05       	cpc	r22, r1
     ff6:	71 05       	cpc	r23, r1
     ff8:	19 f4       	brne	.+6      	; 0x1000 <__unpack_f+0xb4>
     ffa:	84 e0       	ldi	r24, 0x04	; 4
     ffc:	8c 93       	st	X, r24
     ffe:	08 95       	ret
    1000:	64 ff       	sbrs	r22, 4
    1002:	03 c0       	rjmp	.+6      	; 0x100a <__unpack_f+0xbe>
    1004:	81 e0       	ldi	r24, 0x01	; 1
    1006:	8c 93       	st	X, r24
    1008:	12 c0       	rjmp	.+36     	; 0x102e <__unpack_f+0xe2>
    100a:	1c 92       	st	X, r1
    100c:	10 c0       	rjmp	.+32     	; 0x102e <__unpack_f+0xe2>
    100e:	2f 57       	subi	r18, 0x7F	; 127
    1010:	30 40       	sbci	r19, 0x00	; 0
    1012:	13 96       	adiw	r26, 0x03	; 3
    1014:	3c 93       	st	X, r19
    1016:	2e 93       	st	-X, r18
    1018:	12 97       	sbiw	r26, 0x02	; 2
    101a:	83 e0       	ldi	r24, 0x03	; 3
    101c:	8c 93       	st	X, r24
    101e:	87 e0       	ldi	r24, 0x07	; 7
    1020:	44 0f       	add	r20, r20
    1022:	55 1f       	adc	r21, r21
    1024:	66 1f       	adc	r22, r22
    1026:	77 1f       	adc	r23, r23
    1028:	8a 95       	dec	r24
    102a:	d1 f7       	brne	.-12     	; 0x1020 <__unpack_f+0xd4>
    102c:	70 64       	ori	r23, 0x40	; 64
    102e:	14 96       	adiw	r26, 0x04	; 4
    1030:	4d 93       	st	X+, r20
    1032:	5d 93       	st	X+, r21
    1034:	6d 93       	st	X+, r22
    1036:	7c 93       	st	X, r23
    1038:	17 97       	sbiw	r26, 0x07	; 7
    103a:	08 95       	ret

0000103c <__fpcmp_parts_f>:
    103c:	1f 93       	push	r17
    103e:	dc 01       	movw	r26, r24
    1040:	fb 01       	movw	r30, r22
    1042:	9c 91       	ld	r25, X
    1044:	92 30       	cpi	r25, 0x02	; 2
    1046:	08 f4       	brcc	.+2      	; 0x104a <__fpcmp_parts_f+0xe>
    1048:	47 c0       	rjmp	.+142    	; 0x10d8 <__fpcmp_parts_f+0x9c>
    104a:	80 81       	ld	r24, Z
    104c:	82 30       	cpi	r24, 0x02	; 2
    104e:	08 f4       	brcc	.+2      	; 0x1052 <__fpcmp_parts_f+0x16>
    1050:	43 c0       	rjmp	.+134    	; 0x10d8 <__fpcmp_parts_f+0x9c>
    1052:	94 30       	cpi	r25, 0x04	; 4
    1054:	51 f4       	brne	.+20     	; 0x106a <__fpcmp_parts_f+0x2e>
    1056:	11 96       	adiw	r26, 0x01	; 1
    1058:	1c 91       	ld	r17, X
    105a:	84 30       	cpi	r24, 0x04	; 4
    105c:	99 f5       	brne	.+102    	; 0x10c4 <__fpcmp_parts_f+0x88>
    105e:	81 81       	ldd	r24, Z+1	; 0x01
    1060:	68 2f       	mov	r22, r24
    1062:	70 e0       	ldi	r23, 0x00	; 0
    1064:	61 1b       	sub	r22, r17
    1066:	71 09       	sbc	r23, r1
    1068:	3f c0       	rjmp	.+126    	; 0x10e8 <__fpcmp_parts_f+0xac>
    106a:	84 30       	cpi	r24, 0x04	; 4
    106c:	21 f0       	breq	.+8      	; 0x1076 <__fpcmp_parts_f+0x3a>
    106e:	92 30       	cpi	r25, 0x02	; 2
    1070:	31 f4       	brne	.+12     	; 0x107e <__fpcmp_parts_f+0x42>
    1072:	82 30       	cpi	r24, 0x02	; 2
    1074:	b9 f1       	breq	.+110    	; 0x10e4 <__fpcmp_parts_f+0xa8>
    1076:	81 81       	ldd	r24, Z+1	; 0x01
    1078:	88 23       	and	r24, r24
    107a:	89 f1       	breq	.+98     	; 0x10de <__fpcmp_parts_f+0xa2>
    107c:	2d c0       	rjmp	.+90     	; 0x10d8 <__fpcmp_parts_f+0x9c>
    107e:	11 96       	adiw	r26, 0x01	; 1
    1080:	1c 91       	ld	r17, X
    1082:	11 97       	sbiw	r26, 0x01	; 1
    1084:	82 30       	cpi	r24, 0x02	; 2
    1086:	f1 f0       	breq	.+60     	; 0x10c4 <__fpcmp_parts_f+0x88>
    1088:	81 81       	ldd	r24, Z+1	; 0x01
    108a:	18 17       	cp	r17, r24
    108c:	d9 f4       	brne	.+54     	; 0x10c4 <__fpcmp_parts_f+0x88>
    108e:	12 96       	adiw	r26, 0x02	; 2
    1090:	2d 91       	ld	r18, X+
    1092:	3c 91       	ld	r19, X
    1094:	13 97       	sbiw	r26, 0x03	; 3
    1096:	82 81       	ldd	r24, Z+2	; 0x02
    1098:	93 81       	ldd	r25, Z+3	; 0x03
    109a:	82 17       	cp	r24, r18
    109c:	93 07       	cpc	r25, r19
    109e:	94 f0       	brlt	.+36     	; 0x10c4 <__fpcmp_parts_f+0x88>
    10a0:	28 17       	cp	r18, r24
    10a2:	39 07       	cpc	r19, r25
    10a4:	bc f0       	brlt	.+46     	; 0x10d4 <__fpcmp_parts_f+0x98>
    10a6:	14 96       	adiw	r26, 0x04	; 4
    10a8:	8d 91       	ld	r24, X+
    10aa:	9d 91       	ld	r25, X+
    10ac:	0d 90       	ld	r0, X+
    10ae:	bc 91       	ld	r27, X
    10b0:	a0 2d       	mov	r26, r0
    10b2:	24 81       	ldd	r18, Z+4	; 0x04
    10b4:	35 81       	ldd	r19, Z+5	; 0x05
    10b6:	46 81       	ldd	r20, Z+6	; 0x06
    10b8:	57 81       	ldd	r21, Z+7	; 0x07
    10ba:	28 17       	cp	r18, r24
    10bc:	39 07       	cpc	r19, r25
    10be:	4a 07       	cpc	r20, r26
    10c0:	5b 07       	cpc	r21, r27
    10c2:	18 f4       	brcc	.+6      	; 0x10ca <__fpcmp_parts_f+0x8e>
    10c4:	11 23       	and	r17, r17
    10c6:	41 f0       	breq	.+16     	; 0x10d8 <__fpcmp_parts_f+0x9c>
    10c8:	0a c0       	rjmp	.+20     	; 0x10de <__fpcmp_parts_f+0xa2>
    10ca:	82 17       	cp	r24, r18
    10cc:	93 07       	cpc	r25, r19
    10ce:	a4 07       	cpc	r26, r20
    10d0:	b5 07       	cpc	r27, r21
    10d2:	40 f4       	brcc	.+16     	; 0x10e4 <__fpcmp_parts_f+0xa8>
    10d4:	11 23       	and	r17, r17
    10d6:	19 f0       	breq	.+6      	; 0x10de <__fpcmp_parts_f+0xa2>
    10d8:	61 e0       	ldi	r22, 0x01	; 1
    10da:	70 e0       	ldi	r23, 0x00	; 0
    10dc:	05 c0       	rjmp	.+10     	; 0x10e8 <__fpcmp_parts_f+0xac>
    10de:	6f ef       	ldi	r22, 0xFF	; 255
    10e0:	7f ef       	ldi	r23, 0xFF	; 255
    10e2:	02 c0       	rjmp	.+4      	; 0x10e8 <__fpcmp_parts_f+0xac>
    10e4:	60 e0       	ldi	r22, 0x00	; 0
    10e6:	70 e0       	ldi	r23, 0x00	; 0
    10e8:	cb 01       	movw	r24, r22
    10ea:	1f 91       	pop	r17
    10ec:	08 95       	ret

000010ee <__prologue_saves__>:
    10ee:	2f 92       	push	r2
    10f0:	3f 92       	push	r3
    10f2:	4f 92       	push	r4
    10f4:	5f 92       	push	r5
    10f6:	6f 92       	push	r6
    10f8:	7f 92       	push	r7
    10fa:	8f 92       	push	r8
    10fc:	9f 92       	push	r9
    10fe:	af 92       	push	r10
    1100:	bf 92       	push	r11
    1102:	cf 92       	push	r12
    1104:	df 92       	push	r13
    1106:	ef 92       	push	r14
    1108:	ff 92       	push	r15
    110a:	0f 93       	push	r16
    110c:	1f 93       	push	r17
    110e:	cf 93       	push	r28
    1110:	df 93       	push	r29
    1112:	cd b7       	in	r28, 0x3d	; 61
    1114:	de b7       	in	r29, 0x3e	; 62
    1116:	ca 1b       	sub	r28, r26
    1118:	db 0b       	sbc	r29, r27
    111a:	0f b6       	in	r0, 0x3f	; 63
    111c:	f8 94       	cli
    111e:	de bf       	out	0x3e, r29	; 62
    1120:	0f be       	out	0x3f, r0	; 63
    1122:	cd bf       	out	0x3d, r28	; 61
    1124:	09 94       	ijmp

00001126 <__epilogue_restores__>:
    1126:	2a 88       	ldd	r2, Y+18	; 0x12
    1128:	39 88       	ldd	r3, Y+17	; 0x11
    112a:	48 88       	ldd	r4, Y+16	; 0x10
    112c:	5f 84       	ldd	r5, Y+15	; 0x0f
    112e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1130:	7d 84       	ldd	r7, Y+13	; 0x0d
    1132:	8c 84       	ldd	r8, Y+12	; 0x0c
    1134:	9b 84       	ldd	r9, Y+11	; 0x0b
    1136:	aa 84       	ldd	r10, Y+10	; 0x0a
    1138:	b9 84       	ldd	r11, Y+9	; 0x09
    113a:	c8 84       	ldd	r12, Y+8	; 0x08
    113c:	df 80       	ldd	r13, Y+7	; 0x07
    113e:	ee 80       	ldd	r14, Y+6	; 0x06
    1140:	fd 80       	ldd	r15, Y+5	; 0x05
    1142:	0c 81       	ldd	r16, Y+4	; 0x04
    1144:	1b 81       	ldd	r17, Y+3	; 0x03
    1146:	aa 81       	ldd	r26, Y+2	; 0x02
    1148:	b9 81       	ldd	r27, Y+1	; 0x01
    114a:	ce 0f       	add	r28, r30
    114c:	d1 1d       	adc	r29, r1
    114e:	0f b6       	in	r0, 0x3f	; 63
    1150:	f8 94       	cli
    1152:	de bf       	out	0x3e, r29	; 62
    1154:	0f be       	out	0x3f, r0	; 63
    1156:	cd bf       	out	0x3d, r28	; 61
    1158:	ed 01       	movw	r28, r26
    115a:	08 95       	ret

0000115c <printf>:
    115c:	a0 e0       	ldi	r26, 0x00	; 0
    115e:	b0 e0       	ldi	r27, 0x00	; 0
    1160:	e4 eb       	ldi	r30, 0xB4	; 180
    1162:	f8 e0       	ldi	r31, 0x08	; 8
    1164:	0c 94 87 08 	jmp	0x110e	; 0x110e <__prologue_saves__+0x20>
    1168:	fe 01       	movw	r30, r28
    116a:	35 96       	adiw	r30, 0x05	; 5
    116c:	61 91       	ld	r22, Z+
    116e:	71 91       	ld	r23, Z+
    1170:	80 91 c5 01 	lds	r24, 0x01C5
    1174:	90 91 c6 01 	lds	r25, 0x01C6
    1178:	af 01       	movw	r20, r30
    117a:	0e 94 ca 08 	call	0x1194	; 0x1194 <vfprintf>
    117e:	20 96       	adiw	r28, 0x00	; 0
    1180:	e2 e0       	ldi	r30, 0x02	; 2
    1182:	0c 94 a3 08 	jmp	0x1146	; 0x1146 <__epilogue_restores__+0x20>

00001186 <putchar>:
    1186:	60 91 c5 01 	lds	r22, 0x01C5
    118a:	70 91 c6 01 	lds	r23, 0x01C6
    118e:	0e 94 bd 0a 	call	0x157a	; 0x157a <fputc>
    1192:	08 95       	ret

00001194 <vfprintf>:
    1194:	ab e0       	ldi	r26, 0x0B	; 11
    1196:	b0 e0       	ldi	r27, 0x00	; 0
    1198:	e0 ed       	ldi	r30, 0xD0	; 208
    119a:	f8 e0       	ldi	r31, 0x08	; 8
    119c:	0c 94 77 08 	jmp	0x10ee	; 0x10ee <__prologue_saves__>
    11a0:	3c 01       	movw	r6, r24
    11a2:	2b 01       	movw	r4, r22
    11a4:	5a 01       	movw	r10, r20
    11a6:	fc 01       	movw	r30, r24
    11a8:	17 82       	std	Z+7, r1	; 0x07
    11aa:	16 82       	std	Z+6, r1	; 0x06
    11ac:	83 81       	ldd	r24, Z+3	; 0x03
    11ae:	81 fd       	sbrc	r24, 1
    11b0:	03 c0       	rjmp	.+6      	; 0x11b8 <vfprintf+0x24>
    11b2:	6f ef       	ldi	r22, 0xFF	; 255
    11b4:	7f ef       	ldi	r23, 0xFF	; 255
    11b6:	c6 c1       	rjmp	.+908    	; 0x1544 <vfprintf+0x3b0>
    11b8:	9a e0       	ldi	r25, 0x0A	; 10
    11ba:	89 2e       	mov	r8, r25
    11bc:	1e 01       	movw	r2, r28
    11be:	08 94       	sec
    11c0:	21 1c       	adc	r2, r1
    11c2:	31 1c       	adc	r3, r1
    11c4:	f3 01       	movw	r30, r6
    11c6:	23 81       	ldd	r18, Z+3	; 0x03
    11c8:	f2 01       	movw	r30, r4
    11ca:	23 fd       	sbrc	r18, 3
    11cc:	85 91       	lpm	r24, Z+
    11ce:	23 ff       	sbrs	r18, 3
    11d0:	81 91       	ld	r24, Z+
    11d2:	2f 01       	movw	r4, r30
    11d4:	88 23       	and	r24, r24
    11d6:	09 f4       	brne	.+2      	; 0x11da <vfprintf+0x46>
    11d8:	b2 c1       	rjmp	.+868    	; 0x153e <vfprintf+0x3aa>
    11da:	85 32       	cpi	r24, 0x25	; 37
    11dc:	39 f4       	brne	.+14     	; 0x11ec <vfprintf+0x58>
    11de:	23 fd       	sbrc	r18, 3
    11e0:	85 91       	lpm	r24, Z+
    11e2:	23 ff       	sbrs	r18, 3
    11e4:	81 91       	ld	r24, Z+
    11e6:	2f 01       	movw	r4, r30
    11e8:	85 32       	cpi	r24, 0x25	; 37
    11ea:	29 f4       	brne	.+10     	; 0x11f6 <vfprintf+0x62>
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	b3 01       	movw	r22, r6
    11f0:	0e 94 bd 0a 	call	0x157a	; 0x157a <fputc>
    11f4:	e7 cf       	rjmp	.-50     	; 0x11c4 <vfprintf+0x30>
    11f6:	98 2f       	mov	r25, r24
    11f8:	ff 24       	eor	r15, r15
    11fa:	ee 24       	eor	r14, r14
    11fc:	99 24       	eor	r9, r9
    11fe:	ff e1       	ldi	r31, 0x1F	; 31
    1200:	ff 15       	cp	r31, r15
    1202:	d0 f0       	brcs	.+52     	; 0x1238 <vfprintf+0xa4>
    1204:	9b 32       	cpi	r25, 0x2B	; 43
    1206:	69 f0       	breq	.+26     	; 0x1222 <vfprintf+0x8e>
    1208:	9c 32       	cpi	r25, 0x2C	; 44
    120a:	28 f4       	brcc	.+10     	; 0x1216 <vfprintf+0x82>
    120c:	90 32       	cpi	r25, 0x20	; 32
    120e:	59 f0       	breq	.+22     	; 0x1226 <vfprintf+0x92>
    1210:	93 32       	cpi	r25, 0x23	; 35
    1212:	91 f4       	brne	.+36     	; 0x1238 <vfprintf+0xa4>
    1214:	0e c0       	rjmp	.+28     	; 0x1232 <vfprintf+0x9e>
    1216:	9d 32       	cpi	r25, 0x2D	; 45
    1218:	49 f0       	breq	.+18     	; 0x122c <vfprintf+0x98>
    121a:	90 33       	cpi	r25, 0x30	; 48
    121c:	69 f4       	brne	.+26     	; 0x1238 <vfprintf+0xa4>
    121e:	41 e0       	ldi	r20, 0x01	; 1
    1220:	24 c0       	rjmp	.+72     	; 0x126a <vfprintf+0xd6>
    1222:	52 e0       	ldi	r21, 0x02	; 2
    1224:	f5 2a       	or	r15, r21
    1226:	84 e0       	ldi	r24, 0x04	; 4
    1228:	f8 2a       	or	r15, r24
    122a:	28 c0       	rjmp	.+80     	; 0x127c <vfprintf+0xe8>
    122c:	98 e0       	ldi	r25, 0x08	; 8
    122e:	f9 2a       	or	r15, r25
    1230:	25 c0       	rjmp	.+74     	; 0x127c <vfprintf+0xe8>
    1232:	e0 e1       	ldi	r30, 0x10	; 16
    1234:	fe 2a       	or	r15, r30
    1236:	22 c0       	rjmp	.+68     	; 0x127c <vfprintf+0xe8>
    1238:	f7 fc       	sbrc	r15, 7
    123a:	29 c0       	rjmp	.+82     	; 0x128e <vfprintf+0xfa>
    123c:	89 2f       	mov	r24, r25
    123e:	80 53       	subi	r24, 0x30	; 48
    1240:	8a 30       	cpi	r24, 0x0A	; 10
    1242:	70 f4       	brcc	.+28     	; 0x1260 <vfprintf+0xcc>
    1244:	f6 fe       	sbrs	r15, 6
    1246:	05 c0       	rjmp	.+10     	; 0x1252 <vfprintf+0xbe>
    1248:	98 9c       	mul	r9, r8
    124a:	90 2c       	mov	r9, r0
    124c:	11 24       	eor	r1, r1
    124e:	98 0e       	add	r9, r24
    1250:	15 c0       	rjmp	.+42     	; 0x127c <vfprintf+0xe8>
    1252:	e8 9c       	mul	r14, r8
    1254:	e0 2c       	mov	r14, r0
    1256:	11 24       	eor	r1, r1
    1258:	e8 0e       	add	r14, r24
    125a:	f0 e2       	ldi	r31, 0x20	; 32
    125c:	ff 2a       	or	r15, r31
    125e:	0e c0       	rjmp	.+28     	; 0x127c <vfprintf+0xe8>
    1260:	9e 32       	cpi	r25, 0x2E	; 46
    1262:	29 f4       	brne	.+10     	; 0x126e <vfprintf+0xda>
    1264:	f6 fc       	sbrc	r15, 6
    1266:	6b c1       	rjmp	.+726    	; 0x153e <vfprintf+0x3aa>
    1268:	40 e4       	ldi	r20, 0x40	; 64
    126a:	f4 2a       	or	r15, r20
    126c:	07 c0       	rjmp	.+14     	; 0x127c <vfprintf+0xe8>
    126e:	9c 36       	cpi	r25, 0x6C	; 108
    1270:	19 f4       	brne	.+6      	; 0x1278 <vfprintf+0xe4>
    1272:	50 e8       	ldi	r21, 0x80	; 128
    1274:	f5 2a       	or	r15, r21
    1276:	02 c0       	rjmp	.+4      	; 0x127c <vfprintf+0xe8>
    1278:	98 36       	cpi	r25, 0x68	; 104
    127a:	49 f4       	brne	.+18     	; 0x128e <vfprintf+0xfa>
    127c:	f2 01       	movw	r30, r4
    127e:	23 fd       	sbrc	r18, 3
    1280:	95 91       	lpm	r25, Z+
    1282:	23 ff       	sbrs	r18, 3
    1284:	91 91       	ld	r25, Z+
    1286:	2f 01       	movw	r4, r30
    1288:	99 23       	and	r25, r25
    128a:	09 f0       	breq	.+2      	; 0x128e <vfprintf+0xfa>
    128c:	b8 cf       	rjmp	.-144    	; 0x11fe <vfprintf+0x6a>
    128e:	89 2f       	mov	r24, r25
    1290:	85 54       	subi	r24, 0x45	; 69
    1292:	83 30       	cpi	r24, 0x03	; 3
    1294:	18 f0       	brcs	.+6      	; 0x129c <vfprintf+0x108>
    1296:	80 52       	subi	r24, 0x20	; 32
    1298:	83 30       	cpi	r24, 0x03	; 3
    129a:	38 f4       	brcc	.+14     	; 0x12aa <vfprintf+0x116>
    129c:	44 e0       	ldi	r20, 0x04	; 4
    129e:	50 e0       	ldi	r21, 0x00	; 0
    12a0:	a4 0e       	add	r10, r20
    12a2:	b5 1e       	adc	r11, r21
    12a4:	5f e3       	ldi	r21, 0x3F	; 63
    12a6:	59 83       	std	Y+1, r21	; 0x01
    12a8:	0f c0       	rjmp	.+30     	; 0x12c8 <vfprintf+0x134>
    12aa:	93 36       	cpi	r25, 0x63	; 99
    12ac:	31 f0       	breq	.+12     	; 0x12ba <vfprintf+0x126>
    12ae:	93 37       	cpi	r25, 0x73	; 115
    12b0:	79 f0       	breq	.+30     	; 0x12d0 <vfprintf+0x13c>
    12b2:	93 35       	cpi	r25, 0x53	; 83
    12b4:	09 f0       	breq	.+2      	; 0x12b8 <vfprintf+0x124>
    12b6:	56 c0       	rjmp	.+172    	; 0x1364 <vfprintf+0x1d0>
    12b8:	20 c0       	rjmp	.+64     	; 0x12fa <vfprintf+0x166>
    12ba:	f5 01       	movw	r30, r10
    12bc:	80 81       	ld	r24, Z
    12be:	89 83       	std	Y+1, r24	; 0x01
    12c0:	42 e0       	ldi	r20, 0x02	; 2
    12c2:	50 e0       	ldi	r21, 0x00	; 0
    12c4:	a4 0e       	add	r10, r20
    12c6:	b5 1e       	adc	r11, r21
    12c8:	61 01       	movw	r12, r2
    12ca:	01 e0       	ldi	r16, 0x01	; 1
    12cc:	10 e0       	ldi	r17, 0x00	; 0
    12ce:	12 c0       	rjmp	.+36     	; 0x12f4 <vfprintf+0x160>
    12d0:	f5 01       	movw	r30, r10
    12d2:	c0 80       	ld	r12, Z
    12d4:	d1 80       	ldd	r13, Z+1	; 0x01
    12d6:	f6 fc       	sbrc	r15, 6
    12d8:	03 c0       	rjmp	.+6      	; 0x12e0 <vfprintf+0x14c>
    12da:	6f ef       	ldi	r22, 0xFF	; 255
    12dc:	7f ef       	ldi	r23, 0xFF	; 255
    12de:	02 c0       	rjmp	.+4      	; 0x12e4 <vfprintf+0x150>
    12e0:	69 2d       	mov	r22, r9
    12e2:	70 e0       	ldi	r23, 0x00	; 0
    12e4:	42 e0       	ldi	r20, 0x02	; 2
    12e6:	50 e0       	ldi	r21, 0x00	; 0
    12e8:	a4 0e       	add	r10, r20
    12ea:	b5 1e       	adc	r11, r21
    12ec:	c6 01       	movw	r24, r12
    12ee:	0e 94 b2 0a 	call	0x1564	; 0x1564 <strnlen>
    12f2:	8c 01       	movw	r16, r24
    12f4:	5f e7       	ldi	r21, 0x7F	; 127
    12f6:	f5 22       	and	r15, r21
    12f8:	14 c0       	rjmp	.+40     	; 0x1322 <vfprintf+0x18e>
    12fa:	f5 01       	movw	r30, r10
    12fc:	c0 80       	ld	r12, Z
    12fe:	d1 80       	ldd	r13, Z+1	; 0x01
    1300:	f6 fc       	sbrc	r15, 6
    1302:	03 c0       	rjmp	.+6      	; 0x130a <vfprintf+0x176>
    1304:	6f ef       	ldi	r22, 0xFF	; 255
    1306:	7f ef       	ldi	r23, 0xFF	; 255
    1308:	02 c0       	rjmp	.+4      	; 0x130e <vfprintf+0x17a>
    130a:	69 2d       	mov	r22, r9
    130c:	70 e0       	ldi	r23, 0x00	; 0
    130e:	42 e0       	ldi	r20, 0x02	; 2
    1310:	50 e0       	ldi	r21, 0x00	; 0
    1312:	a4 0e       	add	r10, r20
    1314:	b5 1e       	adc	r11, r21
    1316:	c6 01       	movw	r24, r12
    1318:	0e 94 a7 0a 	call	0x154e	; 0x154e <strnlen_P>
    131c:	8c 01       	movw	r16, r24
    131e:	50 e8       	ldi	r21, 0x80	; 128
    1320:	f5 2a       	or	r15, r21
    1322:	f3 fe       	sbrs	r15, 3
    1324:	07 c0       	rjmp	.+14     	; 0x1334 <vfprintf+0x1a0>
    1326:	1a c0       	rjmp	.+52     	; 0x135c <vfprintf+0x1c8>
    1328:	80 e2       	ldi	r24, 0x20	; 32
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	b3 01       	movw	r22, r6
    132e:	0e 94 bd 0a 	call	0x157a	; 0x157a <fputc>
    1332:	ea 94       	dec	r14
    1334:	8e 2d       	mov	r24, r14
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	08 17       	cp	r16, r24
    133a:	19 07       	cpc	r17, r25
    133c:	a8 f3       	brcs	.-22     	; 0x1328 <vfprintf+0x194>
    133e:	0e c0       	rjmp	.+28     	; 0x135c <vfprintf+0x1c8>
    1340:	f6 01       	movw	r30, r12
    1342:	f7 fc       	sbrc	r15, 7
    1344:	85 91       	lpm	r24, Z+
    1346:	f7 fe       	sbrs	r15, 7
    1348:	81 91       	ld	r24, Z+
    134a:	6f 01       	movw	r12, r30
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	b3 01       	movw	r22, r6
    1350:	0e 94 bd 0a 	call	0x157a	; 0x157a <fputc>
    1354:	e1 10       	cpse	r14, r1
    1356:	ea 94       	dec	r14
    1358:	01 50       	subi	r16, 0x01	; 1
    135a:	10 40       	sbci	r17, 0x00	; 0
    135c:	01 15       	cp	r16, r1
    135e:	11 05       	cpc	r17, r1
    1360:	79 f7       	brne	.-34     	; 0x1340 <vfprintf+0x1ac>
    1362:	ea c0       	rjmp	.+468    	; 0x1538 <vfprintf+0x3a4>
    1364:	94 36       	cpi	r25, 0x64	; 100
    1366:	11 f0       	breq	.+4      	; 0x136c <vfprintf+0x1d8>
    1368:	99 36       	cpi	r25, 0x69	; 105
    136a:	69 f5       	brne	.+90     	; 0x13c6 <vfprintf+0x232>
    136c:	f7 fe       	sbrs	r15, 7
    136e:	08 c0       	rjmp	.+16     	; 0x1380 <vfprintf+0x1ec>
    1370:	f5 01       	movw	r30, r10
    1372:	20 81       	ld	r18, Z
    1374:	31 81       	ldd	r19, Z+1	; 0x01
    1376:	42 81       	ldd	r20, Z+2	; 0x02
    1378:	53 81       	ldd	r21, Z+3	; 0x03
    137a:	84 e0       	ldi	r24, 0x04	; 4
    137c:	90 e0       	ldi	r25, 0x00	; 0
    137e:	0a c0       	rjmp	.+20     	; 0x1394 <vfprintf+0x200>
    1380:	f5 01       	movw	r30, r10
    1382:	80 81       	ld	r24, Z
    1384:	91 81       	ldd	r25, Z+1	; 0x01
    1386:	9c 01       	movw	r18, r24
    1388:	44 27       	eor	r20, r20
    138a:	37 fd       	sbrc	r19, 7
    138c:	40 95       	com	r20
    138e:	54 2f       	mov	r21, r20
    1390:	82 e0       	ldi	r24, 0x02	; 2
    1392:	90 e0       	ldi	r25, 0x00	; 0
    1394:	a8 0e       	add	r10, r24
    1396:	b9 1e       	adc	r11, r25
    1398:	9f e6       	ldi	r25, 0x6F	; 111
    139a:	f9 22       	and	r15, r25
    139c:	57 ff       	sbrs	r21, 7
    139e:	09 c0       	rjmp	.+18     	; 0x13b2 <vfprintf+0x21e>
    13a0:	50 95       	com	r21
    13a2:	40 95       	com	r20
    13a4:	30 95       	com	r19
    13a6:	21 95       	neg	r18
    13a8:	3f 4f       	sbci	r19, 0xFF	; 255
    13aa:	4f 4f       	sbci	r20, 0xFF	; 255
    13ac:	5f 4f       	sbci	r21, 0xFF	; 255
    13ae:	e0 e8       	ldi	r30, 0x80	; 128
    13b0:	fe 2a       	or	r15, r30
    13b2:	ca 01       	movw	r24, r20
    13b4:	b9 01       	movw	r22, r18
    13b6:	a1 01       	movw	r20, r2
    13b8:	2a e0       	ldi	r18, 0x0A	; 10
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	0e 94 e9 0a 	call	0x15d2	; 0x15d2 <__ultoa_invert>
    13c0:	d8 2e       	mov	r13, r24
    13c2:	d2 18       	sub	r13, r2
    13c4:	40 c0       	rjmp	.+128    	; 0x1446 <vfprintf+0x2b2>
    13c6:	95 37       	cpi	r25, 0x75	; 117
    13c8:	29 f4       	brne	.+10     	; 0x13d4 <vfprintf+0x240>
    13ca:	1f 2d       	mov	r17, r15
    13cc:	1f 7e       	andi	r17, 0xEF	; 239
    13ce:	2a e0       	ldi	r18, 0x0A	; 10
    13d0:	30 e0       	ldi	r19, 0x00	; 0
    13d2:	1d c0       	rjmp	.+58     	; 0x140e <vfprintf+0x27a>
    13d4:	1f 2d       	mov	r17, r15
    13d6:	19 7f       	andi	r17, 0xF9	; 249
    13d8:	9f 36       	cpi	r25, 0x6F	; 111
    13da:	61 f0       	breq	.+24     	; 0x13f4 <vfprintf+0x260>
    13dc:	90 37       	cpi	r25, 0x70	; 112
    13de:	20 f4       	brcc	.+8      	; 0x13e8 <vfprintf+0x254>
    13e0:	98 35       	cpi	r25, 0x58	; 88
    13e2:	09 f0       	breq	.+2      	; 0x13e6 <vfprintf+0x252>
    13e4:	ac c0       	rjmp	.+344    	; 0x153e <vfprintf+0x3aa>
    13e6:	0f c0       	rjmp	.+30     	; 0x1406 <vfprintf+0x272>
    13e8:	90 37       	cpi	r25, 0x70	; 112
    13ea:	39 f0       	breq	.+14     	; 0x13fa <vfprintf+0x266>
    13ec:	98 37       	cpi	r25, 0x78	; 120
    13ee:	09 f0       	breq	.+2      	; 0x13f2 <vfprintf+0x25e>
    13f0:	a6 c0       	rjmp	.+332    	; 0x153e <vfprintf+0x3aa>
    13f2:	04 c0       	rjmp	.+8      	; 0x13fc <vfprintf+0x268>
    13f4:	28 e0       	ldi	r18, 0x08	; 8
    13f6:	30 e0       	ldi	r19, 0x00	; 0
    13f8:	0a c0       	rjmp	.+20     	; 0x140e <vfprintf+0x27a>
    13fa:	10 61       	ori	r17, 0x10	; 16
    13fc:	14 fd       	sbrc	r17, 4
    13fe:	14 60       	ori	r17, 0x04	; 4
    1400:	20 e1       	ldi	r18, 0x10	; 16
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	04 c0       	rjmp	.+8      	; 0x140e <vfprintf+0x27a>
    1406:	14 fd       	sbrc	r17, 4
    1408:	16 60       	ori	r17, 0x06	; 6
    140a:	20 e1       	ldi	r18, 0x10	; 16
    140c:	32 e0       	ldi	r19, 0x02	; 2
    140e:	17 ff       	sbrs	r17, 7
    1410:	08 c0       	rjmp	.+16     	; 0x1422 <vfprintf+0x28e>
    1412:	f5 01       	movw	r30, r10
    1414:	60 81       	ld	r22, Z
    1416:	71 81       	ldd	r23, Z+1	; 0x01
    1418:	82 81       	ldd	r24, Z+2	; 0x02
    141a:	93 81       	ldd	r25, Z+3	; 0x03
    141c:	44 e0       	ldi	r20, 0x04	; 4
    141e:	50 e0       	ldi	r21, 0x00	; 0
    1420:	08 c0       	rjmp	.+16     	; 0x1432 <vfprintf+0x29e>
    1422:	f5 01       	movw	r30, r10
    1424:	80 81       	ld	r24, Z
    1426:	91 81       	ldd	r25, Z+1	; 0x01
    1428:	bc 01       	movw	r22, r24
    142a:	80 e0       	ldi	r24, 0x00	; 0
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	42 e0       	ldi	r20, 0x02	; 2
    1430:	50 e0       	ldi	r21, 0x00	; 0
    1432:	a4 0e       	add	r10, r20
    1434:	b5 1e       	adc	r11, r21
    1436:	a1 01       	movw	r20, r2
    1438:	0e 94 e9 0a 	call	0x15d2	; 0x15d2 <__ultoa_invert>
    143c:	d8 2e       	mov	r13, r24
    143e:	d2 18       	sub	r13, r2
    1440:	8f e7       	ldi	r24, 0x7F	; 127
    1442:	f8 2e       	mov	r15, r24
    1444:	f1 22       	and	r15, r17
    1446:	f6 fe       	sbrs	r15, 6
    1448:	0b c0       	rjmp	.+22     	; 0x1460 <vfprintf+0x2cc>
    144a:	5e ef       	ldi	r21, 0xFE	; 254
    144c:	f5 22       	and	r15, r21
    144e:	d9 14       	cp	r13, r9
    1450:	38 f4       	brcc	.+14     	; 0x1460 <vfprintf+0x2cc>
    1452:	f4 fe       	sbrs	r15, 4
    1454:	07 c0       	rjmp	.+14     	; 0x1464 <vfprintf+0x2d0>
    1456:	f2 fc       	sbrc	r15, 2
    1458:	05 c0       	rjmp	.+10     	; 0x1464 <vfprintf+0x2d0>
    145a:	8f ee       	ldi	r24, 0xEF	; 239
    145c:	f8 22       	and	r15, r24
    145e:	02 c0       	rjmp	.+4      	; 0x1464 <vfprintf+0x2d0>
    1460:	1d 2d       	mov	r17, r13
    1462:	01 c0       	rjmp	.+2      	; 0x1466 <vfprintf+0x2d2>
    1464:	19 2d       	mov	r17, r9
    1466:	f4 fe       	sbrs	r15, 4
    1468:	0d c0       	rjmp	.+26     	; 0x1484 <vfprintf+0x2f0>
    146a:	fe 01       	movw	r30, r28
    146c:	ed 0d       	add	r30, r13
    146e:	f1 1d       	adc	r31, r1
    1470:	80 81       	ld	r24, Z
    1472:	80 33       	cpi	r24, 0x30	; 48
    1474:	19 f4       	brne	.+6      	; 0x147c <vfprintf+0x2e8>
    1476:	99 ee       	ldi	r25, 0xE9	; 233
    1478:	f9 22       	and	r15, r25
    147a:	08 c0       	rjmp	.+16     	; 0x148c <vfprintf+0x2f8>
    147c:	1f 5f       	subi	r17, 0xFF	; 255
    147e:	f2 fe       	sbrs	r15, 2
    1480:	05 c0       	rjmp	.+10     	; 0x148c <vfprintf+0x2f8>
    1482:	03 c0       	rjmp	.+6      	; 0x148a <vfprintf+0x2f6>
    1484:	8f 2d       	mov	r24, r15
    1486:	86 78       	andi	r24, 0x86	; 134
    1488:	09 f0       	breq	.+2      	; 0x148c <vfprintf+0x2f8>
    148a:	1f 5f       	subi	r17, 0xFF	; 255
    148c:	0f 2d       	mov	r16, r15
    148e:	f3 fc       	sbrc	r15, 3
    1490:	14 c0       	rjmp	.+40     	; 0x14ba <vfprintf+0x326>
    1492:	f0 fe       	sbrs	r15, 0
    1494:	0f c0       	rjmp	.+30     	; 0x14b4 <vfprintf+0x320>
    1496:	1e 15       	cp	r17, r14
    1498:	10 f0       	brcs	.+4      	; 0x149e <vfprintf+0x30a>
    149a:	9d 2c       	mov	r9, r13
    149c:	0b c0       	rjmp	.+22     	; 0x14b4 <vfprintf+0x320>
    149e:	9d 2c       	mov	r9, r13
    14a0:	9e 0c       	add	r9, r14
    14a2:	91 1a       	sub	r9, r17
    14a4:	1e 2d       	mov	r17, r14
    14a6:	06 c0       	rjmp	.+12     	; 0x14b4 <vfprintf+0x320>
    14a8:	80 e2       	ldi	r24, 0x20	; 32
    14aa:	90 e0       	ldi	r25, 0x00	; 0
    14ac:	b3 01       	movw	r22, r6
    14ae:	0e 94 bd 0a 	call	0x157a	; 0x157a <fputc>
    14b2:	1f 5f       	subi	r17, 0xFF	; 255
    14b4:	1e 15       	cp	r17, r14
    14b6:	c0 f3       	brcs	.-16     	; 0x14a8 <vfprintf+0x314>
    14b8:	04 c0       	rjmp	.+8      	; 0x14c2 <vfprintf+0x32e>
    14ba:	1e 15       	cp	r17, r14
    14bc:	10 f4       	brcc	.+4      	; 0x14c2 <vfprintf+0x32e>
    14be:	e1 1a       	sub	r14, r17
    14c0:	01 c0       	rjmp	.+2      	; 0x14c4 <vfprintf+0x330>
    14c2:	ee 24       	eor	r14, r14
    14c4:	04 ff       	sbrs	r16, 4
    14c6:	0f c0       	rjmp	.+30     	; 0x14e6 <vfprintf+0x352>
    14c8:	80 e3       	ldi	r24, 0x30	; 48
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	b3 01       	movw	r22, r6
    14ce:	0e 94 bd 0a 	call	0x157a	; 0x157a <fputc>
    14d2:	02 ff       	sbrs	r16, 2
    14d4:	1d c0       	rjmp	.+58     	; 0x1510 <vfprintf+0x37c>
    14d6:	01 fd       	sbrc	r16, 1
    14d8:	03 c0       	rjmp	.+6      	; 0x14e0 <vfprintf+0x34c>
    14da:	88 e7       	ldi	r24, 0x78	; 120
    14dc:	90 e0       	ldi	r25, 0x00	; 0
    14de:	0e c0       	rjmp	.+28     	; 0x14fc <vfprintf+0x368>
    14e0:	88 e5       	ldi	r24, 0x58	; 88
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	0b c0       	rjmp	.+22     	; 0x14fc <vfprintf+0x368>
    14e6:	80 2f       	mov	r24, r16
    14e8:	86 78       	andi	r24, 0x86	; 134
    14ea:	91 f0       	breq	.+36     	; 0x1510 <vfprintf+0x37c>
    14ec:	01 ff       	sbrs	r16, 1
    14ee:	02 c0       	rjmp	.+4      	; 0x14f4 <vfprintf+0x360>
    14f0:	8b e2       	ldi	r24, 0x2B	; 43
    14f2:	01 c0       	rjmp	.+2      	; 0x14f6 <vfprintf+0x362>
    14f4:	80 e2       	ldi	r24, 0x20	; 32
    14f6:	f7 fc       	sbrc	r15, 7
    14f8:	8d e2       	ldi	r24, 0x2D	; 45
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	b3 01       	movw	r22, r6
    14fe:	0e 94 bd 0a 	call	0x157a	; 0x157a <fputc>
    1502:	06 c0       	rjmp	.+12     	; 0x1510 <vfprintf+0x37c>
    1504:	80 e3       	ldi	r24, 0x30	; 48
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	b3 01       	movw	r22, r6
    150a:	0e 94 bd 0a 	call	0x157a	; 0x157a <fputc>
    150e:	9a 94       	dec	r9
    1510:	d9 14       	cp	r13, r9
    1512:	c0 f3       	brcs	.-16     	; 0x1504 <vfprintf+0x370>
    1514:	da 94       	dec	r13
    1516:	f1 01       	movw	r30, r2
    1518:	ed 0d       	add	r30, r13
    151a:	f1 1d       	adc	r31, r1
    151c:	80 81       	ld	r24, Z
    151e:	90 e0       	ldi	r25, 0x00	; 0
    1520:	b3 01       	movw	r22, r6
    1522:	0e 94 bd 0a 	call	0x157a	; 0x157a <fputc>
    1526:	dd 20       	and	r13, r13
    1528:	a9 f7       	brne	.-22     	; 0x1514 <vfprintf+0x380>
    152a:	06 c0       	rjmp	.+12     	; 0x1538 <vfprintf+0x3a4>
    152c:	80 e2       	ldi	r24, 0x20	; 32
    152e:	90 e0       	ldi	r25, 0x00	; 0
    1530:	b3 01       	movw	r22, r6
    1532:	0e 94 bd 0a 	call	0x157a	; 0x157a <fputc>
    1536:	ea 94       	dec	r14
    1538:	ee 20       	and	r14, r14
    153a:	c1 f7       	brne	.-16     	; 0x152c <vfprintf+0x398>
    153c:	43 ce       	rjmp	.-890    	; 0x11c4 <vfprintf+0x30>
    153e:	f3 01       	movw	r30, r6
    1540:	66 81       	ldd	r22, Z+6	; 0x06
    1542:	77 81       	ldd	r23, Z+7	; 0x07
    1544:	cb 01       	movw	r24, r22
    1546:	2b 96       	adiw	r28, 0x0b	; 11
    1548:	e2 e1       	ldi	r30, 0x12	; 18
    154a:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__epilogue_restores__>

0000154e <strnlen_P>:
    154e:	fc 01       	movw	r30, r24
    1550:	05 90       	lpm	r0, Z+
    1552:	61 50       	subi	r22, 0x01	; 1
    1554:	70 40       	sbci	r23, 0x00	; 0
    1556:	01 10       	cpse	r0, r1
    1558:	d8 f7       	brcc	.-10     	; 0x1550 <strnlen_P+0x2>
    155a:	80 95       	com	r24
    155c:	90 95       	com	r25
    155e:	8e 0f       	add	r24, r30
    1560:	9f 1f       	adc	r25, r31
    1562:	08 95       	ret

00001564 <strnlen>:
    1564:	fc 01       	movw	r30, r24
    1566:	61 50       	subi	r22, 0x01	; 1
    1568:	70 40       	sbci	r23, 0x00	; 0
    156a:	01 90       	ld	r0, Z+
    156c:	01 10       	cpse	r0, r1
    156e:	d8 f7       	brcc	.-10     	; 0x1566 <strnlen+0x2>
    1570:	80 95       	com	r24
    1572:	90 95       	com	r25
    1574:	8e 0f       	add	r24, r30
    1576:	9f 1f       	adc	r25, r31
    1578:	08 95       	ret

0000157a <fputc>:
    157a:	0f 93       	push	r16
    157c:	1f 93       	push	r17
    157e:	cf 93       	push	r28
    1580:	df 93       	push	r29
    1582:	8c 01       	movw	r16, r24
    1584:	eb 01       	movw	r28, r22
    1586:	8b 81       	ldd	r24, Y+3	; 0x03
    1588:	81 ff       	sbrs	r24, 1
    158a:	1b c0       	rjmp	.+54     	; 0x15c2 <fputc+0x48>
    158c:	82 ff       	sbrs	r24, 2
    158e:	0d c0       	rjmp	.+26     	; 0x15aa <fputc+0x30>
    1590:	2e 81       	ldd	r18, Y+6	; 0x06
    1592:	3f 81       	ldd	r19, Y+7	; 0x07
    1594:	8c 81       	ldd	r24, Y+4	; 0x04
    1596:	9d 81       	ldd	r25, Y+5	; 0x05
    1598:	28 17       	cp	r18, r24
    159a:	39 07       	cpc	r19, r25
    159c:	64 f4       	brge	.+24     	; 0x15b6 <fputc+0x3c>
    159e:	e8 81       	ld	r30, Y
    15a0:	f9 81       	ldd	r31, Y+1	; 0x01
    15a2:	01 93       	st	Z+, r16
    15a4:	f9 83       	std	Y+1, r31	; 0x01
    15a6:	e8 83       	st	Y, r30
    15a8:	06 c0       	rjmp	.+12     	; 0x15b6 <fputc+0x3c>
    15aa:	e8 85       	ldd	r30, Y+8	; 0x08
    15ac:	f9 85       	ldd	r31, Y+9	; 0x09
    15ae:	80 2f       	mov	r24, r16
    15b0:	09 95       	icall
    15b2:	89 2b       	or	r24, r25
    15b4:	31 f4       	brne	.+12     	; 0x15c2 <fputc+0x48>
    15b6:	8e 81       	ldd	r24, Y+6	; 0x06
    15b8:	9f 81       	ldd	r25, Y+7	; 0x07
    15ba:	01 96       	adiw	r24, 0x01	; 1
    15bc:	9f 83       	std	Y+7, r25	; 0x07
    15be:	8e 83       	std	Y+6, r24	; 0x06
    15c0:	02 c0       	rjmp	.+4      	; 0x15c6 <fputc+0x4c>
    15c2:	0f ef       	ldi	r16, 0xFF	; 255
    15c4:	1f ef       	ldi	r17, 0xFF	; 255
    15c6:	c8 01       	movw	r24, r16
    15c8:	df 91       	pop	r29
    15ca:	cf 91       	pop	r28
    15cc:	1f 91       	pop	r17
    15ce:	0f 91       	pop	r16
    15d0:	08 95       	ret

000015d2 <__ultoa_invert>:
    15d2:	fa 01       	movw	r30, r20
    15d4:	aa 27       	eor	r26, r26
    15d6:	28 30       	cpi	r18, 0x08	; 8
    15d8:	51 f1       	breq	.+84     	; 0x162e <__ultoa_invert+0x5c>
    15da:	20 31       	cpi	r18, 0x10	; 16
    15dc:	81 f1       	breq	.+96     	; 0x163e <__ultoa_invert+0x6c>
    15de:	e8 94       	clt
    15e0:	6f 93       	push	r22
    15e2:	6e 7f       	andi	r22, 0xFE	; 254
    15e4:	6e 5f       	subi	r22, 0xFE	; 254
    15e6:	7f 4f       	sbci	r23, 0xFF	; 255
    15e8:	8f 4f       	sbci	r24, 0xFF	; 255
    15ea:	9f 4f       	sbci	r25, 0xFF	; 255
    15ec:	af 4f       	sbci	r26, 0xFF	; 255
    15ee:	b1 e0       	ldi	r27, 0x01	; 1
    15f0:	3e d0       	rcall	.+124    	; 0x166e <__ultoa_invert+0x9c>
    15f2:	b4 e0       	ldi	r27, 0x04	; 4
    15f4:	3c d0       	rcall	.+120    	; 0x166e <__ultoa_invert+0x9c>
    15f6:	67 0f       	add	r22, r23
    15f8:	78 1f       	adc	r23, r24
    15fa:	89 1f       	adc	r24, r25
    15fc:	9a 1f       	adc	r25, r26
    15fe:	a1 1d       	adc	r26, r1
    1600:	68 0f       	add	r22, r24
    1602:	79 1f       	adc	r23, r25
    1604:	8a 1f       	adc	r24, r26
    1606:	91 1d       	adc	r25, r1
    1608:	a1 1d       	adc	r26, r1
    160a:	6a 0f       	add	r22, r26
    160c:	71 1d       	adc	r23, r1
    160e:	81 1d       	adc	r24, r1
    1610:	91 1d       	adc	r25, r1
    1612:	a1 1d       	adc	r26, r1
    1614:	20 d0       	rcall	.+64     	; 0x1656 <__ultoa_invert+0x84>
    1616:	09 f4       	brne	.+2      	; 0x161a <__ultoa_invert+0x48>
    1618:	68 94       	set
    161a:	3f 91       	pop	r19
    161c:	2a e0       	ldi	r18, 0x0A	; 10
    161e:	26 9f       	mul	r18, r22
    1620:	11 24       	eor	r1, r1
    1622:	30 19       	sub	r19, r0
    1624:	30 5d       	subi	r19, 0xD0	; 208
    1626:	31 93       	st	Z+, r19
    1628:	de f6       	brtc	.-74     	; 0x15e0 <__ultoa_invert+0xe>
    162a:	cf 01       	movw	r24, r30
    162c:	08 95       	ret
    162e:	46 2f       	mov	r20, r22
    1630:	47 70       	andi	r20, 0x07	; 7
    1632:	40 5d       	subi	r20, 0xD0	; 208
    1634:	41 93       	st	Z+, r20
    1636:	b3 e0       	ldi	r27, 0x03	; 3
    1638:	0f d0       	rcall	.+30     	; 0x1658 <__ultoa_invert+0x86>
    163a:	c9 f7       	brne	.-14     	; 0x162e <__ultoa_invert+0x5c>
    163c:	f6 cf       	rjmp	.-20     	; 0x162a <__ultoa_invert+0x58>
    163e:	46 2f       	mov	r20, r22
    1640:	4f 70       	andi	r20, 0x0F	; 15
    1642:	40 5d       	subi	r20, 0xD0	; 208
    1644:	4a 33       	cpi	r20, 0x3A	; 58
    1646:	18 f0       	brcs	.+6      	; 0x164e <__ultoa_invert+0x7c>
    1648:	49 5d       	subi	r20, 0xD9	; 217
    164a:	31 fd       	sbrc	r19, 1
    164c:	40 52       	subi	r20, 0x20	; 32
    164e:	41 93       	st	Z+, r20
    1650:	02 d0       	rcall	.+4      	; 0x1656 <__ultoa_invert+0x84>
    1652:	a9 f7       	brne	.-22     	; 0x163e <__ultoa_invert+0x6c>
    1654:	ea cf       	rjmp	.-44     	; 0x162a <__ultoa_invert+0x58>
    1656:	b4 e0       	ldi	r27, 0x04	; 4
    1658:	a6 95       	lsr	r26
    165a:	97 95       	ror	r25
    165c:	87 95       	ror	r24
    165e:	77 95       	ror	r23
    1660:	67 95       	ror	r22
    1662:	ba 95       	dec	r27
    1664:	c9 f7       	brne	.-14     	; 0x1658 <__ultoa_invert+0x86>
    1666:	00 97       	sbiw	r24, 0x00	; 0
    1668:	61 05       	cpc	r22, r1
    166a:	71 05       	cpc	r23, r1
    166c:	08 95       	ret
    166e:	9b 01       	movw	r18, r22
    1670:	ac 01       	movw	r20, r24
    1672:	0a 2e       	mov	r0, r26
    1674:	06 94       	lsr	r0
    1676:	57 95       	ror	r21
    1678:	47 95       	ror	r20
    167a:	37 95       	ror	r19
    167c:	27 95       	ror	r18
    167e:	ba 95       	dec	r27
    1680:	c9 f7       	brne	.-14     	; 0x1674 <__ultoa_invert+0xa2>
    1682:	62 0f       	add	r22, r18
    1684:	73 1f       	adc	r23, r19
    1686:	84 1f       	adc	r24, r20
    1688:	95 1f       	adc	r25, r21
    168a:	a0 1d       	adc	r26, r0
    168c:	08 95       	ret

0000168e <_exit>:
    168e:	f8 94       	cli

00001690 <__stop_program>:
    1690:	ff cf       	rjmp	.-2      	; 0x1690 <__stop_program>
